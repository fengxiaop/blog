<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>这是一个记录着一个人成长的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-13T07:18:49.343Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fengxiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lambda表达式</title>
    <link href="http://example.com/2022/03/12/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2022/03/12/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2022-03-12T14:57:20.979Z</published>
    <updated>2022-03-13T07:18:49.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h1><blockquote><p><strong>Lambda 表达式</strong> − Lambda 允许把函数作为一个方法的参数（函数作为参数传递到方法中）。</p></blockquote><p>Lambda 表达式的基础语法：Java8中引入了一个新的操作符表达式，”-&gt;” 该操作符为箭头操作符或Lambda操作符</p><p>左侧：lambda表达式的参数列表</p><p>右侧：lambda表达式中所需执行的功能，即 Lambda体</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="1-无参数，无返回值"><a href="#1-无参数，无返回值" class="headerlink" title="1.无参数，无返回值"></a>1.无参数，无返回值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Runnable t = () -&gt; System.out.println(<span class="string">&quot;Hello Lambda&quot;</span>)</span><br><span class="line">t.run();</span><br></pre></td></tr></table></figure><h3 id="2-有参数，无返回值"><a href="#2-有参数，无返回值" class="headerlink" title="2.有参数，无返回值"></a>2.有参数，无返回值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(x)-&gt; System.out.println(x)</span><br></pre></td></tr></table></figure><p>若只有一个参数,小括号可以省略不写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x-&gt; System.out.println(x)</span><br></pre></td></tr></table></figure><h3>3.有两个以上的参数,有返回值,并且 Lambda体中有多条语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Comparator&lt;Integer&gt; com =(x,y)-&gt;(System.out.print1n(<span class="string">&quot;函数式接口&quot;</span>) <span class="keyword">return</span> Integer.compare(x,y)</span><br></pre></td></tr></table></figure><p>…待续</p><h3></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Lambda表达式&quot;&gt;&lt;a href=&quot;#Lambda表达式&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式&quot;&gt;&lt;/a&gt;Lambda表达式&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Lambda 表达式&lt;/strong&gt; −</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JAVA面向对象</title>
    <link href="http://example.com/2022/03/12/JAVA%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://example.com/2022/03/12/JAVA%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2022-03-12T08:36:10.000Z</published>
    <updated>2022-03-13T07:58:48.548Z</updated>
    
    <content type="html"><![CDATA[<p>JAVA面向对象</p><p><strong>面向过程:</strong> 先确定如何操作数据，再决定数据的结构，适用于小规模问题。</p><p><strong>面向对象OOP：</strong>先决定数据的结构，在考虑操作数据的算法，适用于大规模问题。</p><p><strong>this与super关键字</strong></p><p>this关键字</p><ul><li>隐式参数的调用</li><li>调用该类的其他构造器</li></ul><p>super关键字</p><ul><li>调用父类方法</li><li>调用父类构造器</li></ul><p>注意：this可以作为当前对象的引用，但是super却不可以作为父类对象的引用</p><h2 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h2><p>数组+链表</p><p>数组+链表+红黑树</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.无序 不可重复</p><p>2.⽆序：因为不⼀定挂在那个单链表上了 </p><p>为什么不可重复 </p><p>通过重写equals方法保证的</p><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><p>Java里面有一个字符串常量池的东西</p><p>创建字符串对象时，如果字符串常量池没有那个字符 则需要先在字符串常量池里面创建，再创建字符串对象</p><p>如果已存在于字符串常量池，则只需要创建字符串对象</p><h4 id="为什么把字符串存储在⼀个“字符串常量池”当中呢？"><a href="#为什么把字符串存储在⼀个“字符串常量池”当中呢？" class="headerlink" title="为什么把字符串存储在⼀个“字符串常量池”当中呢？"></a>为什么把字符串存储在⼀个“字符串常量池”当中呢？</h4><ol><li><p>因为字符串在实际的开发中使⽤太频繁。 </p></li><li><p>为了提⾼执⾏效率，所以把字符串放到了⽅法区的“字符串常量池”当中。 </p></li></ol><h2 id="String、-StringBuilder、-StringBuffer解析"><a href="#String、-StringBuilder、-StringBuffer解析" class="headerlink" title="String、 StringBuilder、 StringBuffer解析"></a>String、 StringBuilder、 StringBuffer解析</h2><p>String 底层数组用final修饰，不可变。</p><p>StringBuilder 底层数组没有用final修饰，可变；线程不安全，效率高</p><p>StringBuffer 底层数组没有用final修饰，可变；线程安全 效率地</p><p>⽅法都采⽤ 了 synchronized 修饰 </p><h3>== 与 equals</h3><p>对于基本数据类型来说  == 比较的是值</p><p>对于引用数据类型来说  ==比较的是对象的内存地址</p><p><strong><code>equals()</code></strong> 不能用于判断基本数据类型的变量，只能用来判断两个对象是否相等。<code>equals()</code>方法存在于<code>Object</code>类中，而<code>Object</code>类是所有类的直接或间接父类，因此所有的类都有<code>equals()</code>方法。 </p><p>String类中的equals方法是重写过的 因为Object的equals类方法是比较的对象的内存地址 <strong>而String类中的equals方法比较的是对象的值</strong></p><p>当创建 <code>String</code> 类型的对象时，虚拟机会在常量池中查找有没有已经存在的值和要创建的值相同的对象，如果有就把它赋给当前引用。如果没有就在常量池中重新创建一个 <code>String</code> 对象</p><p><code>String</code>类<code>equals()</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">        String anotherString = (String)anObject;</span><br><span class="line">        <span class="keyword">int</span> n = value.length;</span><br><span class="line">        <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">            <span class="keyword">char</span> v1[] = value;</span><br><span class="line">            <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3>HashCode() 与 equals()</h3><p>HashCode()的作用：</p><blockquote><p>HashCode()的作用是获取哈希码（int函数） 也称之为散列码，这个哈希码的作用是为了确认在哈希表中的索引位置。</p><p><code>hashCode()</code>定义在 JDK 的 <code>Object</code> 类中，这就意味着 Java 中的任何类都包含有 <code>hashCode()</code> 函数。另外需要注意的是： <code>Object</code> 的 <code>hashCode()</code> 方法是本地方法，也就是用 C 语言或 C++ 实现的，该方法通常用来将对象的内存地址转换为整数之后返回。</p></blockquote><p>散列表存储的是键值对(key-value)，它的特点是：<strong>能根据“键”快速的检索出对应的“值”。这其中就利用到了散列码！（可以快速找到所需要的对象）</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JAVA面向对象&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面向过程:&lt;/strong&gt; 先确定如何操作数据，再决定数据的结构，适用于小规模问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面向对象OOP：&lt;/strong&gt;先决定数据的结构，在考虑操作数据的算法，适用于大规模问题。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>反射</title>
    <link href="http://example.com/2022/02/22/%E5%8F%8D%E5%B0%84/"/>
    <id>http://example.com/2022/02/22/%E5%8F%8D%E5%B0%84/</id>
    <published>2022-02-22T05:47:36.000Z</published>
    <updated>2022-02-22T05:48:10.132Z</updated>
    
    <content type="html"><![CDATA[<h2 id="七、反射"><a href="#七、反射" class="headerlink" title="七、反射"></a>七、反射</h2><p>每个类都有一个 <strong>Class</strong> 对象，包含了与类有关的信息。当编译一个新类时，会产生一个同名的 .class 文件，该文件内容保存着 Class 对象。</p><p>类加载相当于 Class 对象的加载，类在第一次使用时才动态加载到 JVM 中。也可以使用 <code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;)</code> 这种方式来控制类的加载，该方法会返回一个 Class 对象。</p><p>反射可以提供运行时的类信息，并且这个类可以在运行时才加载进来，甚至在编译时期该类的 .class 不存在也可以加载进来。</p><p>Class 和 java.lang.reflect 一起对反射提供了支持，java.lang.reflect 类库主要包含了以下三个类：</p><ul><li><strong>Field</strong> ：可以使用 get() 和 set() 方法读取和修改 Field 对象关联的字段；</li><li><strong>Method</strong> ：可以使用 invoke() 方法调用与 Method 对象关联的方法；</li><li><strong>Constructor</strong> ：可以用 Constructor 的 newInstance() 创建新的对象。</li></ul><p><strong>反射的优点：</strong></p><ul><li><strong>可扩展性</strong> ：应用程序可以利用全限定名创建可扩展对象的实例，来使用来自外部的用户自定义类。</li><li><strong>类浏览器和可视化开发环境</strong> ：一个类浏览器需要可以枚举类的成员。可视化开发环境（如 IDE）可以从利用反射中可用的类型信息中受益，以帮助程序员编写正确的代码。</li><li><strong>调试器和测试工具</strong> ： 调试器需要能够检查一个类里的私有成员。测试工具可以利用反射来自动地调用类里定义的可被发现的 API 定义，以确保一组测试中有较高的代码覆盖率。</li></ul><p><strong>反射的缺点：</strong></p><p>尽管反射非常强大，但也不能滥用。如果一个功能可以不用反射完成，那么最好就不用。在我们使用反射技术时，下面几条内容应该牢记于心。</p><ul><li><strong>性能开销</strong> ：反射涉及了动态类型的解析，所以 JVM 无法对这些代码进行优化。因此，反射操作的效率要比那些非反射操作低得多。我们应该避免在经常被执行的代码或对性能要求很高的程序中使用反射。</li><li><strong>安全限制</strong> ：使用反射技术要求程序必须在一个没有安全限制的环境中运行。如果一个程序必须在有安全限制的环境中运行，如 Applet，那么这就是个问题了。</li><li><strong>内部暴露</strong> ：由于反射允许代码执行一些在正常情况下不被允许的操作（比如访问私有的属性和方法），所以使用反射可能会导致意料之外的副作用，这可能导致代码功能失调并破坏可移植性。反射代码破坏了抽象性，因此当平台发生改变的时候，代码的行为就有可能也随着变化。</li><li>源于 <a href="https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20%E5%9F%BA%E7%A1%80.md#clone">https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20%E5%9F%BA%E7%A1%80.md#clone</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;七、反射&quot;&gt;&lt;a href=&quot;#七、反射&quot; class=&quot;headerlink&quot; title=&quot;七、反射&quot;&gt;&lt;/a&gt;七、反射&lt;/h2&gt;&lt;p&gt;每个类都有一个 &lt;strong&gt;Class&lt;/strong&gt; 对象，包含了与类有关的信息。当编译一个新类时，会产生一个同名的</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>新年总结以及未来展望</title>
    <link href="http://example.com/2022/02/22/%E6%96%B0%E5%B9%B4%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B/"/>
    <id>http://example.com/2022/02/22/%E6%96%B0%E5%B9%B4%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B/</id>
    <published>2022-02-22T04:55:36.000Z</published>
    <updated>2022-02-22T05:15:21.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><p>我是一个从湖南省西南地区的一个小山村里走出来的孩子</p><h2 id="高中"><a href="#高中" class="headerlink" title="高中"></a>高中</h2><p>就读于本县的一所比较好的高中，这所高中95%的同学都来自于农村，其中的学习氛围与志同道合的人不在少数，其中很多同学都聊得来，在那里与他们可以用方言直接交流。进校时自己是一个平平无奇的同学，后面高三厚积薄发名列班级第一或许是自己这辈子以来，很骄傲的一个事把。后面出成绩之后，其实 成绩并不是很理想，但是也算正常发挥。后面选择了湖南工业大学的计算机类专业。在高三之前，自己其实的想法是读这个师范专业，不要钱包分配的最好，这是长辈们根深蒂固对我思想的印象，后面我初中差点去读了师范中专。还好，我爸力排众议，让我先读高中，然后高中读完再去读师范，从这点看出，我爸其实想的更远一些，填志愿的时候，也是我一手操办，后面我选了计算机专业，我爸还时不时的唠叨，让我出去找个老师的工作，逃不出安稳两个字。</p><h2 id="大学"><a href="#大学" class="headerlink" title="大学"></a>大学</h2><p>大一是个大类专业 上学期高数学的很严重，作业也完成不错，可是大一下学期疫情来临，在家里自我懈怠。作业只管抄。过的浑浑噩噩。后面专业分流 成绩排名 200/700 自己跟着大部队选了课比较少的软件工程。</p><p>大二也是我一个人生的改变点吧。自己性格是个很热心肠的人，后面上台竞选了班长。但这也给我自己带来了许多的麻烦。比如很多事都尽心尽力，很多小事同学们都会来找我，只是自己为了对得起<strong>为大家服务</strong>这五个字，经常心力憔悴。与辅导员的交流过程大都是搪塞过去的，与辅导员和学生会的认识过程中，自己遇见了一些不能接受的时期，无法与他们同流合污，以及交流，后面我已经不想和她们进行交流，只想尽快卸任。</p><p>大三上学期终于卸任掉了自己的班长，也解放了天性似乎，想逃课就逃课，想干嘛就干嘛，这是一个很快乐的学期，但是因为自己面临着找工作与考研的选择而倍感焦虑。时长因为自己大一大二的贪玩感到后悔，只是后悔有什么用，后悔就能真正的回到过去吗，只是在浪费时间更加的后悔不已。</p><p>原本自己寒假立了个flag好好学习，也因为家里环境不好以及无休止的拜年胎死腹中。 此时此刻无比焦虑写下来可能比较好。希望自己能够找到一份比较满意的实习</p><p>…….待续</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自我介绍&quot;&gt;&lt;a href=&quot;#自我介绍&quot; class=&quot;headerlink&quot; title=&quot;自我介绍&quot;&gt;&lt;/a&gt;自我介绍&lt;/h1&gt;&lt;p&gt;我是一个从湖南省西南地区的一个小山村里走出来的孩子&lt;/p&gt;
&lt;h2 id=&quot;高中&quot;&gt;&lt;a href=&quot;#高中&quot; class=</summary>
      
    
    
    
    
    <category term="自我介绍" scheme="http://example.com/tags/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>爬取强智科技教务系统—以湖南工业大学为例</title>
    <link href="http://example.com/2022/01/11/%E7%88%AC%E5%8F%96%E5%BC%BA%E5%88%B6%E7%A7%91%E6%8A%80%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E2%80%94%E4%BB%A5%E6%B9%96%E5%8D%97%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E4%B8%BA%E4%BE%8B/"/>
    <id>http://example.com/2022/01/11/%E7%88%AC%E5%8F%96%E5%BC%BA%E5%88%B6%E7%A7%91%E6%8A%80%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E2%80%94%E4%BB%A5%E6%B9%96%E5%8D%97%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E4%B8%BA%E4%BE%8B/</id>
    <published>2022-01-11T06:57:26.000Z</published>
    <updated>2022-01-11T07:38:43.812Z</updated>
    
    <content type="html"><![CDATA[<p> 写这个已经过了很久的的时间了  当时写好没写博客是因为怕这个有额外的问题，现在经过实验 表现的都还没不错 在10min内成绩提醒就会发送到你自己指定的邮箱 我会把代码开源放入Github,当然我也会隐去我自己的信息。</p><p>这篇博客也会教大家怎么使用他</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>IDEA+springboot框架+Maven+jsoup+httpclient</p><p>首先去教务系统网页  新的教务系统有验证码验证 ，但是还好我以前收藏了一个不用验证码的网站</p><p>湖南工业大学教务系统网站 ：<a href="http://218.75.197.123:83/jsxsd/![](https://s2.loli.net/2022/01/11/jQWEIPiNM3oJd1h.png)">http://218.75.197.123:83/jsxsd/![](https://s2.loli.net/2022/01/11/jQWEIPiNM3oJd1h.png)</a></p><p>按F12 然后找到network（网络这一项） 登陆系统</p><p><img src="https://s2.loli.net/2022/01/11/srBjHaApIo8iDyV.png"></p><p>找到这一项 点开 <img src="https://s2.loli.net/2022/01/11/IBreibC61mT3AWM.png"></p><p>记录下这个的信息  userAccount即是学号  encodedd是学号+密码的base64加密</p><p>maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>JWXT<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>JWXT<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>JWXT<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.10.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Lang3工具类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 发送邮件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--HttpClient--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--阿里巴巴 json--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.51<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在IDEA新建Springboot框架 然后在新建类LoginPZ</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.protocol.HttpClientContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.cookie.Cookie;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginPz</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String,String&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        String userAccount = <span class="string">&quot;你的学号&quot;</span>;</span><br><span class="line">        String userPassword = <span class="string">&quot;密码&quot;</span>;</span><br><span class="line">        String encoded = <span class="string">&quot;上文提到的加密信息&quot;</span>;<span class="comment">//加密信息</span></span><br><span class="line">        param.put(<span class="string">&quot;userAccount&quot;</span>,userAccount);</span><br><span class="line">        param.put(<span class="string">&quot;userPassword&quot;</span>,userPassword);</span><br><span class="line">        param.put(<span class="string">&quot;encoded&quot;</span>,encoded);</span><br><span class="line">        List&lt;URI&gt; redirectLocations = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        CloseableHttpClient httpClient = HttpClients.createDefault();</span><br><span class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</span><br><span class="line">        String resultString = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建Http Post请求</span></span><br><span class="line">            HttpPost httpPost = <span class="keyword">new</span> HttpPost(<span class="string">&quot;http://218.75.197.123:83/jsxsd/xk/LoginToXk&quot;</span>);</span><br><span class="line">            <span class="comment">//请求头</span></span><br><span class="line">            httpPost.addHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">            httpPost.addHeader(<span class="string">&quot;Cookie&quot;</span>,<span class="string">&quot;JSESSIONID=22B4C4CE6240C6C53FF6BC3C197E3B83; SERVERID=121; JSESSIONID=8FFFAEA49DC840CE5A3135330C06CED3&quot;</span>);</span><br><span class="line">            <span class="comment">// 创建参数列表</span></span><br><span class="line">            <span class="keyword">if</span> (param != <span class="keyword">null</span>) &#123;</span><br><span class="line">                List&lt;NameValuePair&gt; paramList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (String key : param.keySet()) &#123;</span><br><span class="line">                    paramList.add(<span class="keyword">new</span> BasicNameValuePair(key, param.get(key)));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 模拟表单登录</span></span><br><span class="line">                UrlEncodedFormEntity entity = <span class="keyword">new</span> UrlEncodedFormEntity(paramList);</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 执行http请求</span></span><br><span class="line">            HttpClientContext context = HttpClientContext.create();</span><br><span class="line">            response = httpClient.execute(httpPost,context);</span><br><span class="line">            <span class="comment">//获取Cookie信息,得到两个参数 JSESSIONID 、 Serverid</span></span><br><span class="line">            List&lt;Cookie&gt; cookies = context.getCookieStore().getCookies();</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line"><span class="comment">//                System.out.println(&quot;name:&quot;+name+&quot;,&quot;+value);</span></span><br><span class="line">                <span class="keyword">return</span> value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                response.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是模拟教务系统登陆  然后我们新建类GetUserInfo</p><p>代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录后获取用户信息</span></span><br><span class="line"><span class="comment"> * 相关解析HTMl的操作不是固定的</span></span><br><span class="line"><span class="comment"> * 需要结合自己的需求来操作</span></span><br><span class="line"><span class="comment"> * 此处仅作为演示。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetUserInfo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cj</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; ) &#123;</span><br><span class="line">            LoginPz loginPz = <span class="keyword">new</span> LoginPz();</span><br><span class="line">            String cookies = loginPz.hello();</span><br><span class="line">            CloseableHttpClient httpClient = HttpClients.createDefault();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                HttpGet httpGet = <span class="keyword">new</span> HttpGet(<span class="string">&quot;http://218.75.197.123:83/jsxsd/kscj/cjcx_list?kksj=2021-2022-1&quot;</span>);<span class="comment">//2021-2022-1为学期信息 可自行更改</span></span><br><span class="line">                <span class="comment">//增加头信息</span></span><br><span class="line">                <span class="comment">//注意此处需要修改为正确的JSESSIONID 和 SERVERID</span></span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;Cookie&quot;</span>, <span class="string">&quot;JSESSIONID&quot;</span> + <span class="string">&quot;=&quot;</span> + cookies + <span class="string">&quot;; SERVERID=121; JSESSIONID=8FFFAEA49DC840CE5A3135330C06CED3&quot;</span>);</span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;User-Agent&quot;</span>, <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36&quot;</span>);</span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>);</span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//执行</span></span><br><span class="line">                CloseableHttpResponse response = httpClient.execute(httpGet);</span><br><span class="line">                String html = EntityUtils.toString(response.getEntity(), <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">                Document parse = Jsoup.parse(html);</span><br><span class="line">                parseHtml(parse);</span><br><span class="line">                Thread thread = <span class="keyword">new</span> Thread();</span><br><span class="line">                thread.sleep(<span class="number">600000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">parseHtml</span><span class="params">(Document parse)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        int idx = 2;//目前已出成绩科目</span></span><br><span class="line">        <span class="comment">//选择table</span></span><br><span class="line">        Element table = parse.getElementById(<span class="string">&quot;dataList&quot;</span>);</span><br><span class="line">        <span class="comment">//选择tr</span></span><br><span class="line">        Elements cells = table.select(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder(); <span class="comment">//用来存储成绩信息</span></span><br><span class="line">        <span class="comment">//自己存储的每一行数据</span></span><br><span class="line">        List&lt;List&lt;String&gt;&gt; tables = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">1</span>; index &lt; cells.size(); index++) &#123;</span><br><span class="line">            <span class="comment">//第一行是表头 index = 0 跳过</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//第二行开始table数据</span></span><br><span class="line"></span><br><span class="line">            Element row = cells.get(index);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//搜索tr下的所有的td</span></span><br><span class="line">            Elements rows = row.select(<span class="string">&quot;td&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//每一行的数据</span></span><br><span class="line">            List&lt;String&gt; dataList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (Element element : rows) &#123;</span><br><span class="line">                dataList.add(element.text());</span><br><span class="line">            &#125;</span><br><span class="line">            tables.add(dataList);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取表头</span></span><br><span class="line">        Elements headers = cells.get(<span class="number">0</span>).select(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">        List&lt;String&gt; tableHeader = headers.stream()</span><br><span class="line">                .map(Element::text)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印数据</span></span><br><span class="line">        <span class="keyword">for</span> (String str : tableHeader) &#123;</span><br><span class="line">            System.out.printf(str + <span class="string">&quot;    &quot;</span>);</span><br><span class="line">            stringBuilder.append(str + <span class="string">&quot;      &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuilder.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; strs : tables) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String str : strs) &#123;</span><br><span class="line">                System.out.printf(str + <span class="string">&quot;        &quot;</span>);</span><br><span class="line">                stringBuilder.append(str + <span class="string">&quot;         &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            stringBuilder.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"><span class="comment">//        System.out.println(tables.size());</span></span><br><span class="line">        <span class="keyword">if</span> (tables.size() &gt; idx)<span class="comment">//idx 为原先的成绩数量123</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//发送邮件给自己</span></span><br><span class="line">            System.out.println(<span class="string">&quot;这是一个标志&quot;</span>);</span><br><span class="line">            SendMailUtil.sendEmail(<span class="string">&quot;你的邮箱 xxxx@qq.com&quot;</span>, <span class="string">&quot;成绩更新&quot;</span>, stringBuilder.toString());</span><br><span class="line">            idx = tables.size();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新建发邮件的类SendMailUtil<br>邮箱建议使用qq邮箱  需要拿到授权码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.Address;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMailUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//邮件服务器主机名</span></span><br><span class="line">    <span class="comment">// QQ邮箱的 SMTP 服务器地址为: smtp.qq.com</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String myEmailSMTPHost = <span class="string">&quot;smtp.qq.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发件人邮箱</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String myEmailAccount = <span class="string">&quot;xx@qq.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发件人邮箱密码（授权码）</span></span><br><span class="line">    <span class="comment">//在开启SMTP服务时会获取到一个授权码，把授权码填在这里</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String myEmailPassword = <span class="string">&quot;授权码  需要自己去qq邮箱拿&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 邮件单发（自由编辑短信，并发送，适用于私信）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toEmailAddress 收件箱地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> emailTitle 邮件主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> emailContent 邮件内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendEmail</span><span class="params">(String toEmailAddress, String emailTitle, String emailContent)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启debug调试</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.debug&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送服务器需要身份验证</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 端口号</span></span><br><span class="line">        props.put(<span class="string">&quot;mail.smtp.port&quot;</span>, <span class="number">465</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置邮件服务器主机名</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.host&quot;</span>, myEmailSMTPHost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送邮件协议名称</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**SSL认证，注意腾讯邮箱是基于SSL加密的，所以需要开启才可以使用**/</span></span><br><span class="line">        MailSSLSocketFactory sf = <span class="keyword">new</span> MailSSLSocketFactory();</span><br><span class="line">        sf.setTrustAllHosts(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置是否使用ssl安全连接（一般都使用）</span></span><br><span class="line">        props.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建会话</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取邮件对象</span></span><br><span class="line">        <span class="comment">//发送的消息，基于观察者模式进行设计的</span></span><br><span class="line">        Message msg = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置邮件标题</span></span><br><span class="line">        msg.setSubject(emailTitle);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置邮件内容</span></span><br><span class="line">        <span class="comment">//使用StringBuilder，因为StringBuilder加载速度会比String快，而且线程安全性也不错</span></span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写入内容</span></span><br><span class="line">        builder.append(<span class="string">&quot;\n&quot;</span> + emailContent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置显示的发件时间</span></span><br><span class="line">        msg.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置邮件内容</span></span><br><span class="line">        msg.setText(builder.toString());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置发件人邮箱</span></span><br><span class="line">        <span class="comment">// InternetAddress 的三个参数分别为: 发件人邮箱, 显示的昵称(只用于显示, 没有特别的要求), 昵称的字符集编码</span></span><br><span class="line">        msg.setFrom(<span class="keyword">new</span> InternetAddress(myEmailAccount,<span class="string">&quot;我的工作站&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到邮差对象</span></span><br><span class="line">        Transport transport = session.getTransport();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接自己的邮箱账户</span></span><br><span class="line">        <span class="comment">//密码不是自己QQ邮箱的密码，而是在开启SMTP服务时所获取到的授权码</span></span><br><span class="line">        <span class="comment">//connect(host, user, password)</span></span><br><span class="line">        transport.connect( myEmailSMTPHost, myEmailAccount, myEmailPassword);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送邮件</span></span><br><span class="line">        transport.sendMessage(msg, <span class="keyword">new</span> Address[] &#123; <span class="keyword">new</span> InternetAddress(toEmailAddress) &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将该邮件保存到本地</span></span><br><span class="line">        OutputStream out = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;MyEmail.eml&quot;</span>);</span><br><span class="line">        msg.writeTo(out);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        transport.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿授权码过程</p><p><img src="https://s2.loli.net/2022/01/11/dcGYlLwV7R2QSO6.png"></p><p><img src="https://s2.loli.net/2022/01/11/FeGv29CXQPByhwr.png"></p><p>拿到授权码之后复制到上面去</p><p>再到Application添加启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>  <span class="title">JwxtApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SpringApplication.run(JwxtApplication.class, args);</span><br><span class="line">        GetUserInfo getUserInfo = <span class="keyword">new</span> GetUserInfo();</span><br><span class="line">        getUserInfo.cj();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果自己有服务器就把这个项目打包成jar包上跑起来</p><p>没有的话只能把项目一直跑着不关</p><p>打jar包</p><p><img src="https://s2.loli.net/2022/01/11/Np9EQ26qcyemUTx.png"></p><p><img src="C:\Users\peng\AppData\Roaming\Typora\typora-user-images\image-20220111152346322.png" alt="image-20220111152346322"></p><p>用xshell+xftp把文件传入服务器上</p><p><img src="https://s2.loli.net/2022/01/11/N8nC7XRiZzOkfgt.png"></p><p>然后用xshell 一直cd到jar包所在的路径</p><p><img src="https://s2.loli.net/2022/01/11/NjL9gcGkawufxbv.png"></p><p>使用命令 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar JWXT-0.0.1-SNAPSHOT.jar 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>然后就大功告成了  一般你跑起来之后就会收到一封邮件提醒</p><p>github的项目地址 <a href="https://github.com/fengxiaop/JWXT">https://github.com/fengxiaop/JWXT</a></p><p> 如果有用的话请你动动你的小手点点star  因为这无疑是对我巨大的鼓励。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 写这个已经过了很久的的时间了  当时写好没写博客是因为怕这个有额外的问题，现在经过实验 表现的都还没不错 在10min内成绩提醒就会发送到你自己指定的邮箱 我会把代码开源放入Github,当然我也会隐去我自己的信息。&lt;/p&gt;
&lt;p&gt;这篇博客也会教大家怎么使用他&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>年终总结</title>
    <link href="http://example.com/2022/01/01/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/01/01/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2022-01-01T15:40:37.000Z</published>
    <updated>2022-01-01T15:45:57.239Z</updated>
    
    <content type="html"><![CDATA[<p>  送走了迷茫的2021年 迎来了可能最为艰难的2022年  上学期突然下定决心决定工作，这学期开学到现在陆陆续续的刷了150道力扣  其实很多都是水题。不过像我这样努力了一个月也去拿了个程序设计二等奖。也明白了我现在一直坚持的一句话，</p><p><strong>任何时候努力都不算晚</strong></p><p><img src="https://s2.loli.net/2022/01/01/fbXKBq5ujagpmzk.png"></p><p>也许愿一下自己来年的愿望吧 希望自己能够春招实习能够找到一份好的实习，秋招能够找到自己满意的工作。去想去的上海，弥补高考的遗憾。</p><p>也给来年一些期许吧</p><p>1.力扣打卡 每月满勤</p><p>2.数据结构全部再过一遍</p><p>3.学好八股！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  送走了迷茫的2021年 迎来了可能最为艰难的2022年  上学期突然下定决心决定工作，这学期开学到现在陆陆续续的刷了150道力扣  其实很多都是水题。不过像我这样努力了一个月也去拿了个程序设计二等奖。也明白了我现在一直坚持的一句话，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;任何时</summary>
      
    
    
    
    
    <category term="碎碎念" scheme="http://example.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>完美数</title>
    <link href="http://example.com/2021/12/31/%E5%AE%8C%E7%BE%8E%E6%95%B0/"/>
    <id>http://example.com/2021/12/31/%E5%AE%8C%E7%BE%8E%E6%95%B0/</id>
    <published>2021-12-31T08:19:57.000Z</published>
    <updated>2021-12-31T08:27:01.658Z</updated>
    
    <content type="html"><![CDATA[<p>​    <a href="https://leetcode-cn.com/problems/perfect-number/">507. 完美数</a></p><p>两种方法</p><p>方法一 打表  </p><p><img src="https://s2.loli.net/2021/12/31/tD6SVr2EosC3KBj.png"></p><p>我试了一下我的打表方式 20分钟还没打出最后一个数  </p><p>直接搬官方的吧</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPerfectNumber</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num == <span class="number">6</span> || num == <span class="number">28</span> || num == <span class="number">496</span> || num == <span class="number">8128</span> || num == <span class="number">33550336</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 方法二  枚举</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPerfectNumber</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= num/<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num%i==<span class="number">0</span>)</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum==num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个稍微时间稍微长了一点</p><p>​    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPerfectNumber</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= num / i; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">                ans += i;</span><br><span class="line">                <span class="keyword">if</span> (i * i != num) ans += num / i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans == num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个就很快了 </p><p>同样是枚举 别人写的和我写的 感觉自己在时间复杂度方法还得加强</p><p><img src="https://s2.loli.net/2021/12/31/fKldBcVxSY9JAo1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    &lt;a href=&quot;https://leetcode-cn.com/problems/perfect-number/&quot;&gt;507. 完美数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两种方法&lt;/p&gt;
&lt;p&gt;方法一 打表  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli</summary>
      
    
    
    
    
    <category term="leetcode 507 完美数" scheme="http://example.com/tags/leetcode-507-%E5%AE%8C%E7%BE%8E%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>解决springboot端口被占用问题</title>
    <link href="http://example.com/2021/12/09/%E8%A7%A3%E5%86%B3springboot%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/12/09/%E8%A7%A3%E5%86%B3springboot%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/</id>
    <published>2021-12-09T10:10:11.000Z</published>
    <updated>2021-12-09T10:14:42.080Z</updated>
    
    <content type="html"><![CDATA[<p>#Springboot端口被占用</p><p>打开cmd</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#Springboot端口被占用&lt;/p&gt;
&lt;p&gt;打开cmd&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>b树,红黑树，B+树</title>
    <link href="http://example.com/2021/12/06/b%E6%A0%91/"/>
    <id>http://example.com/2021/12/06/b%E6%A0%91/</id>
    <published>2021-12-06T04:52:15.000Z</published>
    <updated>2021-12-06T04:55:29.818Z</updated>
    
    <content type="html"><![CDATA[<p>红黑树其实就是平衡树的一种，复杂的定义和规则，最后都是为了保证树的平衡性。</p><p>​    因为树的查找性能取决于树的高度，让树尽可能平衡，就是为了降低树的高度。</p><p>B树常用在文件系统的索引上，那为什么文件索引喜欢用B树而不是红黑树呢？</p><p>因为文件系统和数据库的索引都是存在硬盘上的，并且如果数据量大的话，不一定能一次性加载到内存。</p><p>所以一棵树都无法一次性加载进内存，又如何谈查找。所以B树的多路存储能力就出来了，可以每次加载B树的一个节点，然后一步步往下找。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;红黑树其实就是平衡树的一种，复杂的定义和规则，最后都是为了保证树的平衡性。&lt;/p&gt;
&lt;p&gt;​    因为树的查找性能取决于树的高度，让树尽可能平衡，就是为了降低树的高度。&lt;/p&gt;
&lt;p&gt;B树常用在文件系统的索引上，那为什么文件索引喜欢用B树而不是红黑树呢？&lt;/p&gt;
&lt;p&gt;因</summary>
      
    
    
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>快速幂</title>
    <link href="http://example.com/2021/12/05/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    <id>http://example.com/2021/12/05/%E5%BF%AB%E9%80%9F%E5%B9%82/</id>
    <published>2021-12-05T11:13:40.000Z</published>
    <updated>2021-12-05T11:25:16.047Z</updated>
    
    <content type="html"><![CDATA[<p>快速幂</p><h4 id="50-Pow-x-n"><a href="#50-Pow-x-n" class="headerlink" title="50. Pow(x, n)"></a><a href="https://leetcode-cn.com/problems/powx-n/">50. Pow(x, n)</a></h4><p>难度中等8 </p><p>实现 <a href="https://www.cplusplus.com/reference/valarray/pow/">pow(<em>x</em>, <em>n</em>)</a> ，即计算 x 的 n 次幂函数（即，xn）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 2.00000, n = 10</span><br><span class="line">输出：1024.00000</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 2.10000, n = 3</span><br><span class="line">输出：9.26100</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 2.00000, n = -2</span><br><span class="line">输出：0.25000</span><br><span class="line">解释：2-2 = 1/22 = 1/4 = 0.25</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>-100.0 &lt; x &lt; 100.0</code></li><li><code>-231 &lt;= n &lt;= 231-1</code></li><li><code>-104 &lt;= xn &lt;= 104</code></li></ul><p>如果要计算2 的 1024 次方  我们用朴素算法要乘以1024次 算法复杂法O（1024） O（10）</p><p>如果每次都平方一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1-&gt;2-&gt;4-&gt;8-&gt;16-&gt;32-&gt;64-&gt;128-&gt;256-&gt;512-&gt;1024 </span><br></pre></td></tr></table></figure><p>时间复杂的为O（log 1024）也就是10</p><p><img src="https://s2.loli.net/2021/12/05/LwoEReQn2zqDHuJ.png"></p><p>算法板子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">myPow</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> N = n;</span><br><span class="line">        <span class="keyword">return</span> N &gt;= <span class="number">0</span> ? quickMul(x, N) : <span class="number">1.0</span> / quickMul(x, -N);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">quickMul</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">long</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> y = quickMul(x, N / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> N % <span class="number">2</span> == <span class="number">0</span> ? y * y : y * y * x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">myPow</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> N = n;</span><br><span class="line">       <span class="keyword">double</span> ans = quickMul(x,N);</span><br><span class="line">        <span class="keyword">if</span>(N&gt;=<span class="number">0</span>) <span class="keyword">return</span> ans;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1.0</span>/ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">quickMul</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">long</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> y = quickMul(x, N / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(N%<span class="number">2</span>==<span class="number">0</span>) <span class="keyword">return</span> y*y;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> y*y*x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进阶</p><h4 id="372-超级次方"><a href="#372-超级次方" class="headerlink" title="372. 超级次方"></a><a href="https://leetcode-cn.com/problems/super-pow/">372. 超级次方</a></h4><p>难度 中等</p><p>你的任务是计算 <code>ab</code> 对 <code>1337</code> 取模，<code>a</code> 是一个正整数，<code>b</code> 是一个非常大的正整数且会以数组形式给出。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 2, b = [3]</span><br><span class="line">输出：8</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 2, b = [1,0]</span><br><span class="line">输出：1024</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 1, b = [4,3,3,8,5,2]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>示例 4：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 2147483647, b = [2,0,0]</span><br><span class="line">输出：1198</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= a &lt;= 231 - 1</code></li><li><code>1 &lt;= b.length &lt;= 2000</code></li><li><code>0 &lt;= b[i] &lt;= 9</code></li><li><code>b</code> 不含前导 0</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MOD = <span class="number">1337</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">superPow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span>[] b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = b.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">            ans = (<span class="keyword">int</span>) ((<span class="keyword">long</span>) ans * pow(a, b[i]) % MOD);</span><br><span class="line">            a = pow(a, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                res = (<span class="keyword">int</span>) ((<span class="keyword">long</span>) res * x % MOD);</span><br><span class="line">            &#125;</span><br><span class="line">            x = (<span class="keyword">int</span>) ((<span class="keyword">long</span>) x * x % MOD);</span><br><span class="line">            n /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>作者：LeetCode-Solution<br>链接：<a href="https://leetcode-cn.com/problems/super-pow/solution/chao-ji-ci-fang-by-leetcode-solution-ow8j/">https://leetcode-cn.com/problems/super-pow/solution/chao-ji-ci-fang-by-leetcode-solution-ow8j/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;快速幂&lt;/p&gt;
&lt;h4 id=&quot;50-Pow-x-n&quot;&gt;&lt;a href=&quot;#50-Pow-x-n&quot; class=&quot;headerlink&quot; title=&quot;50. Pow(x, n)&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/</summary>
      
    
    
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>contains详解</title>
    <link href="http://example.com/2021/12/02/contains%E8%AF%A6%E8%A7%A3/"/>
    <id>http://example.com/2021/12/02/contains%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-12-02T06:45:12.000Z</published>
    <updated>2021-12-02T07:04:53.334Z</updated>
    
    <content type="html"><![CDATA[<p>Contains方法</p><p>​    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.HUToh;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.*  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        ArrayList arrayList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    String s1 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    arrayList.add(s1);</span><br><span class="line">        arrayList.add(s2);</span><br><span class="line">        String s3 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        System.out.println(s1==s2);</span><br><span class="line">        System.out.println(s1.equals(s2));</span><br><span class="line">        System.out.println(arrayList.contains(s1));</span><br><span class="line">        System.out.println(arrayList.contains(s3));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码输出的是什么是</p><p>是false true true true</p><p>String的equals方法是重写了的 比较的是内容 并不是其他数据类型的equals比较的是内容</p><p>而Contains对象底层调用了equals方法，所以输出true；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Contains方法&lt;/p&gt;
&lt;p&gt;​    &lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>集合</title>
    <link href="http://example.com/2021/12/01/%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/2021/12/01/%E9%9B%86%E5%90%88/</id>
    <published>2021-12-01T10:44:04.000Z</published>
    <updated>2021-12-02T06:44:39.838Z</updated>
    
    <content type="html"><![CDATA[<p> 数组其实就是一个集合,集合实际上就是一个容器。</p><p>集合不能直接存储基本类型  存储的是Java对象的内存地址</p><p>list.add(100) 100会自动装箱成为Integer类型</p><p><img src="https://i.loli.net/2021/12/01/MFhqyvIxNbR4pOg.png"></p><p>ArraysList 底层为数组 非线程安全的</p><p>LinkedList     底层为双向链表</p><p>Vector采用了数组的这个结构 线程安全</p><p>HashMap 底层为哈希表</p><p>TreeMao 底层为二叉树</p><p>collection 继承于 Iterable(迭代器)</p><p>集合分为两大类  1.单个方式存储元素(ArrayList )  父接口为collection</p><p> 可以以键值对的方式(HashMap)&lt;K,V&gt;</p><p>foreach语句 又叫for循环增加语句</p><p>for(数据类型 变量:数组)</p><p>  ｛</p><p>​    ｝</p><p>例：</p><p>for（int i : arr）</p><p>{</p><p>sum = sum+i;</p><p>}</p><p>List存进去有序可重复(指的是存进去的顺序，下标以0 开始 以1递增)</p><p>数组的方法</p><p>数组排序 Arrays.sort(数组)</p><p>克隆一个数组   int[] clone = score.clone();</p><p>Map集合和collection没关系 </p><p>以key和value实现的键值对的方式存储元素</p><p>Map集合包括HashMap和Hashtable</p><p>HashMap底层的是哈希表，是非线程安全的</p><p>Hashtabl底层的是哈希表 ，是线程安全的</p><p>HashMap是无序的</p><p><img src="https://i.loli.net/2021/12/02/JsawZrOkED5BnAK.png"></p><p>#迭代器(Iterator)</p><p>Interator为对象  可以用hasNext和next</p><p>hasNext下一个是不是还有</p><p>next下一个</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     ArrayList  list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">5</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        Iterator iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出顺序也就是输入的顺序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.HUToh;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.*  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     Set list = <span class="keyword">new</span> HashSet();</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">5</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        Iterator iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出顺序和输入顺序并不一样</p><p>所以说Set是无序的  而且Set是不重复的</p><p>即Set具有自动去重功能</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 数组其实就是一个集合,集合实际上就是一个容器。&lt;/p&gt;
&lt;p&gt;集合不能直接存储基本类型  存储的是Java对象的内存地址&lt;/p&gt;
&lt;p&gt;list.add(100) 100会自动装箱成为Integer类型&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.ne</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>新生赛</title>
    <link href="http://example.com/2021/11/28/%E6%96%B0%E7%94%9F%E8%B5%9B/"/>
    <id>http://example.com/2021/11/28/%E6%96%B0%E7%94%9F%E8%B5%9B/</id>
    <published>2021-11-28T13:30:29.000Z</published>
    <updated>2021-11-28T13:42:31.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="L-恭喜edg夺得S11冠军"><a href="#L-恭喜edg夺得S11冠军" class="headerlink" title="L. 恭喜edg夺得S11冠军"></a>L. 恭喜edg夺得S11冠军</h1><p>纯属签到题 细致一点就好了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;EDGNBEDGNBEDGNBEDGNBEDGNBEDGNBEDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;EDGNBEDGNBEDGNBEDGNBEDGNBEDGNBEDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                             EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                            EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                           EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                          EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                         EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                        EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                       EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                      EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                     EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                    EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                   EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                  EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                 EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;               EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;              EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;             EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;            EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;           EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;          EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;         EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;        EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;       EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;      EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;    EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;   EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;EDGNB&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="A-阳阳姐的魔力数"><a href="#A-阳阳姐的魔力数" class="headerlink" title="A. 阳阳姐的魔力数"></a>A. 阳阳姐的魔力数</h1><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>对于我们的出色的冒险者阳阳姐来说，魔力数对他有奇特的作用，能在战斗中助他一臂之力，所以他知道的魔力数越多越好，但是令他头疼的是，他不知道范围N<em>N</em>之内的自然数有多少个魔力数，于是他向你求助，你能帮帮他吗。 一个<strong>自然数</strong>有魔力，当且仅当这个自然数数可以由<strong>两个相同的自然数</strong>拼接起来，比如”2020”这个数字就是由两个”20”拼接而成，但是”2002”却不是魔力数，因为”20”和”02”是两个不同的数字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">long</span> n = scan.nextLong();</span><br><span class="line">        <span class="keyword">long</span> sum =<span class="number">0</span>;</span><br><span class="line">        String s = n+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        String[]  str = &#123;<span class="string">&quot;9&quot;</span>,<span class="string">&quot;99&quot;</span>,<span class="string">&quot;999&quot;</span>,<span class="string">&quot;9999&quot;</span>,<span class="string">&quot;99999&quot;</span>,<span class="string">&quot;999999&quot;</span>,<span class="string">&quot;9999999&quot;</span>,<span class="string">&quot;99999999&quot;</span>,<span class="string">&quot;999999999&quot;</span>,<span class="string">&quot;9999999999&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> m = s.length();</span><br><span class="line">        <span class="keyword">int</span> k = m/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">100</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">11</span>) System.out.print(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">22</span>) System.out.print(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">33</span>) System.out.print(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">44</span>) System.out.print(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">55</span>) System.out.print(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">66</span>) System.out.print(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">77</span>) System.out.print(<span class="number">6</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">88</span>) System.out.print(<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">99</span>) System.out.print(<span class="number">8</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">99</span>) System.out.print(<span class="number">9</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(m%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.print(str[k-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        String string =<span class="string">&quot;&quot;</span>;</span><br><span class="line">        String string1 =<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,j=k;i &lt; k;i++,j++)</span><br><span class="line">        &#123;</span><br><span class="line">        String t = s.charAt(i)+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        String t1 = s.charAt(j)+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        string = string+t;</span><br><span class="line">        string1 = string1+t1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> a = Integer.parseInt(string);</span><br><span class="line">        <span class="keyword">int</span> b = Integer.parseInt(string1);</span><br><span class="line">        <span class="keyword">if</span>(a&lt;=b)</span><br><span class="line">        &#123;<span class="keyword">int</span> q = (<span class="keyword">int</span>) (Integer.parseInt(string)-Math.pow(<span class="number">10</span>,(m/<span class="number">2</span>)-<span class="number">1</span>)+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> p = Integer.parseInt(str[(m/<span class="number">2</span>)-<span class="number">2</span>]);</span><br><span class="line">        System.out.print(q+p);&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> q = (<span class="keyword">int</span>) (Integer.parseInt(string)-Math.pow(<span class="number">10</span>, (m/<span class="number">2</span>)-<span class="number">1</span>));</span><br><span class="line">            <span class="keyword">int</span> p = Integer.parseInt(str[(m/<span class="number">2</span>)-<span class="number">2</span>]);</span><br><span class="line">            System.out.print(q+p);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题有着更好的方法  纯数学题 我直接吧所有情况考虑上了</p><p>奇数位的时候为固定数 不满足魔力数</p><p>偶数为为前一半的值本身或者减一 看前面一半和后面一半谁大</p><p>Yuuki非常喜欢玩APEX，一天不玩就浑身难受，可是为了通过考试，他不得不将部分时间花在学习上来维持段位和分数的平衡</p><p>给定一个字符串s,字符串s只由字符a和字符b组成，其中a代表Yuuki那天玩APEX，b代表学习</p><p>因为Yuuki非常喜欢1010这个数字，所以他规定：在连续的十天之内,玩游戏和学习的天数必须一致</p><p>是否存在连续1010天的区间[l,r][<em>l</em>,<em>r</em>],即r-l+1=10<em>r</em>−<em>l</em>+1=10。 使得Yuuki游戏和学习的天数一样多。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scan.nextInt(); </span><br><span class="line">       String s = scan.next(); </span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">10</span>)&#123; System.out.print(<span class="string">&quot;Yuuki is unhappy&quot;</span>);&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> l = <span class="number">0</span>,r=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(r &lt;=n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> p=<span class="number">0</span>,q=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(;l&lt;r;l++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s.charAt(l)==<span class="string">&#x27;a&#x27;</span>) p++;</span><br><span class="line">                <span class="keyword">else</span> q++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p==<span class="number">5</span>&amp;&amp;q==<span class="number">5</span>) &#123;System.out.println(r-<span class="number">9</span>+<span class="string">&quot; &quot;</span>+r);</span><br><span class="line">            <span class="keyword">break</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">                r++;</span><br><span class="line">                l = r-<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(r &gt; n) System.out.print(<span class="string">&quot;Yuuki is unhappy&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题卡回车</p><p>卡了半个小时 挺恶心的 。。。。</p><h1 id="G-nero想出勤"><a href="#G-nero想出勤" class="headerlink" title="G. nero想出勤"></a>G. nero想出勤</h1><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>又是阳光明媚的一天，看着这么好的天气，nero想要出勤。</p><p>但是nero一个人出勤很无聊，于是拉着lock一起出勤。</p><p>他们俩一起走到了出发的起点，由于nero觉得慢慢走路很无聊，所以nero想到了一个主意，就是两个人轮流决定前进的方向，nero希望能够上下走，而lock希望能够左右走。</p><p>每一回合他们会根据上述的规则决定前进的方向，然后朝着决定的方向前进一步。</p><p>由于他们俩都有选择困难症，不知道谁优先决定前进的方向，于是他们把这个困难的任务交给了你，<strong>你可以任意选择谁优先</strong>，希望你能够告诉他们能否从起点到达出勤的目的地，如果能，请求出所需要的最小步数。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行输入一个整数 t(1\leq t \leq 10^5)<em>t</em>(1≤<em>t</em>≤105)，代表t<em>t</em>组样例，每组样例有两行输入。</p><p>对于每一组样例:</p><p>第一行输入两个整数sy<em>s**y</em>和sx(-10^9\leq sx,sy\leq 10^9)<em>s**x</em>(−109≤<em>s**x</em>,<em>s**y</em>≤109)，分别代表起点的纵坐标sy<em>s**y</em>和起点的横坐标sx<em>s**x</em>。</p><p>第二行输入两个整数ey<em>e**y</em>和ex(-10^9\leq ex,ey\leq 10^9)<em>e**x</em>(−109≤<em>e**x</em>,<em>e**y</em>≤109)，分别代表终点的纵坐标ey<em>e**y</em>和起点的横坐标ex<em>e**x</em>。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>对于每一组样例：</p><p>第一行输出能否到达目的地。</p><p>如果能，输出”YES”(不包含引号)，否则输出”NO“(不包含引号)。</p><p>如果能够到达目的地，在第二行输出所需的最小步数，定义每一步为坐标加一或者减一。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scan.nextInt();</span><br><span class="line">        <span class="keyword">long</span> []arr = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">long</span> []arr2 = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">2</span>]; </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        arr[<span class="number">0</span>] = scan.nextLong();</span><br><span class="line">        arr[<span class="number">1</span>] = scan.nextLong();</span><br><span class="line">        arr2[<span class="number">0</span>] = scan.nextLong();</span><br><span class="line">        arr2[<span class="number">1</span>] = scan.nextLong();</span><br><span class="line">        <span class="keyword">long</span> x = Math.abs(arr[<span class="number">0</span>]-arr2[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">long</span> y = Math.abs(arr[<span class="number">1</span>]-arr2[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">long</span> z = Math.min(x, y);</span><br><span class="line">           <span class="keyword">long</span> sum = z*<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">long</span> p = Math.max(x,y);</span><br><span class="line">        p = p-z;</span><br><span class="line">        <span class="keyword">if</span>(p%<span class="number">2</span>==<span class="number">0</span>) sum = sum + p*<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> sum = sum +(p*<span class="number">2</span>)-<span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单纯的模拟题 只是这里就需要回车了 卡的我头大了</p><h1 id="K-樊学长的馈赠"><a href="#K-樊学长的馈赠" class="headerlink" title="K. 樊学长的馈赠"></a>K. 樊学长的馈赠</h1><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>fzx学长是一位非常厉害的老学长，他在备战考研时依旧挂念着我们的小萌新们，于是他特意给大家出了一道有意思的题目：<br>在茫茫大海中有<strong>n</strong>座独立的岛屿，岛上生活着一些淳朴善良的村民。<br>但是有一天，大海上出现了一群可怕的海盗，海盗们虽然不敢直接攻击岛屿，但是会在海上等待他们出来捕鱼，然后趁机袭击他们。<br>村民们为了抵御海盗，决定与其他岛屿结成攻守同盟，现在你需要为他们规划航线，使得<strong>n</strong>个岛屿形成一个整体(从任意一个岛屿出发，都能到达其他的n-1个岛屿)。<br>但是由于村民们没有接受过现代化的教育，所以他们看不懂你画的航线图，所以你只能告诉他们要设立一些航线，村民们会<strong>随机选择两个之前没有建立过航线的岛屿</strong>，在两个岛屿之间建立一条航线。<br>但是设立航线也是很麻烦的事情，为了尽快组成同盟抵御海盗，你需要找到一个最小的航线数量<strong>m</strong>，确保<strong>n</strong>个岛屿<strong>一定能</strong>形成一个整体。<br>***注意：一条航线可以看作连接两个岛屿**u**和*<em>v*<em>的一条边，相同的两个岛屿之间不会有重复的航线,同时也不会有岛屿规划到自己本身的航线*</em></em></p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行输入一个整数t(t\leq 5 \times 10^5)<em>t</em>(<em>t</em>≤5×105)，代表有t<em>t</em>个样例。<br>每组样例有一行，输入一个整数n(1 &lt; n \leq 10^9)<em>n</em>(1&lt;<em>n</em>≤109)，代表有n<em>n</em>个独立的岛屿。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>每个样例输出一行，一行包含一个正整数m<em>m</em>代表生成的航线数量。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入复制"><a href="#输入复制" class="headerlink" title="输入复制"></a>输入复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输出复制"><a href="#输出复制" class="headerlink" title="输出复制"></a>输出复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输入复制-1"><a href="#输入复制-1" class="headerlink" title="输入复制"></a>输入复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="输出复制-1"><a href="#输出复制-1" class="headerlink" title="输出复制"></a>输出复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">7</span><br></pre></td></tr></table></figure><h4 id="输入复制-2"><a href="#输入复制-2" class="headerlink" title="输入复制"></a>输入复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">65536</span><br></pre></td></tr></table></figure><h4 id="输出复制-2"><a href="#输出复制-2" class="headerlink" title="输出复制"></a>输出复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2147385346</span><br></pre></td></tr></table></figure><p>这题看题目根本没用 直接撸样例 还是能够通过65536和2147385346</p><p>后者的位数是前者的两倍</p><p><img src="https://i.loli.net/2021/11/28/rCe3xN6yazldXiU.png"></p><p>32751是65536差不多1/2</p><p>经过观察 是（n-1）*(n-2)/2+1;</p><p>不过可惜的是赛后几分钟想出来了 </p><p>不过结果还行 二等奖 不过A了这题的话就是第一名了</p><p>不过刷了二个月力扣还算不错的回馈</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;L-恭喜edg夺得S11冠军&quot;&gt;&lt;a href=&quot;#L-恭喜edg夺得S11冠军&quot; class=&quot;headerlink&quot; title=&quot;L. 恭喜edg夺得S11冠军&quot;&gt;&lt;/a&gt;L. 恭喜edg夺得S11冠军&lt;/h1&gt;&lt;p&gt;纯属签到题 细致一点就好了&lt;/p&gt;
&lt;f</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>PDF水印demo</title>
    <link href="http://example.com/2021/11/25/PDF%E6%B0%B4%E5%8D%B0demo/"/>
    <id>http://example.com/2021/11/25/PDF%E6%B0%B4%E5%8D%B0demo/</id>
    <published>2021-11-25T07:36:18.000Z</published>
    <updated>2021-11-25T07:44:12.980Z</updated>
    
    <content type="html"><![CDATA[<p>PDF水印demo学习</p><p>第一步创建一个Application类 加上@SpringBootApplication的注解</p><p>打印控制台消息</p><p><code>System.out.println(&quot;SpringBoot启动成功&quot;);</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;SpringBoot启动成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/25/QAhnxXS98FM6jws.png"></p><p>水印程序</p><p><img src="https://i.loli.net/2021/11/25/KcTm97dtOSshLg4.png"></p><p>FileDTO文件的属性</p><p>文件序号 index</p><p>文件路径 path</p><p>构造有参无参</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件序号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String path;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIndex</span><span class="params">(Integer index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.path = path;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PDF拆分为image</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.pdfwatermark;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.pdmodel.PDDocument;</span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.rendering.ImageType;</span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.rendering.PDFRenderer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pdf2Image</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将File PDF文件转化为每一张图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file PDF文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回每一张图片的实体对象集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;FileDTO&gt; <span class="title">generate</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long now = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//读取PDF</span></span><br><span class="line">            PDDocument document = PDDocument.load(file);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//加载PDF对象</span></span><br><span class="line">            PDFRenderer pdfRenderer = <span class="keyword">new</span> PDFRenderer(document);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//存储的PDF每一张图片的路径以及索引</span></span><br><span class="line">            List&lt;FileDTO&gt; dataList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> page = <span class="number">0</span>;page&lt;document.getNumberOfPages();page++)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//读取PDF每一页的图片</span></span><br><span class="line">                BufferedImage img = pdfRenderer.renderImageWithDPI(page, <span class="number">300</span>, ImageType.RGB);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//生成图片的本地路径</span></span><br><span class="line">                String pathname = PdfWatermarkConstants.PDF_2_IMAGE + now + <span class="string">&quot;/&quot;</span> + file.getName() + page + <span class="string">&quot;.png&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//创建本地文件</span></span><br><span class="line">                File imageFile = <span class="keyword">new</span> File(pathname);</span><br><span class="line">                <span class="comment">//创建文件夹</span></span><br><span class="line">                imageFile.mkdirs();</span><br><span class="line">                <span class="comment">//创建文件</span></span><br><span class="line">                imageFile.createNewFile();</span><br><span class="line"></span><br><span class="line">                FileDTO dto = <span class="keyword">new</span> FileDTO();</span><br><span class="line">                dataList.add(dto);</span><br><span class="line"></span><br><span class="line">                dto.setIndex(page);</span><br><span class="line">                dto.setPath(pathname);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//生成PNG格式的图片</span></span><br><span class="line">                ImageIO.write(img, <span class="string">&quot;png&quot;</span>, imageFile);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//关闭Doc流</span></span><br><span class="line">            document.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> dataList;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PDF水印demo学习&lt;/p&gt;
&lt;p&gt;第一步创建一个Application类 加上@SpringBootApplication的注解&lt;/p&gt;
&lt;p&gt;打印控制台消息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;System.out.println(&amp;quot;SpringBoot启动成功&amp;qu</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>基于BigInteger的写题</title>
    <link href="http://example.com/2021/11/23/%E5%9F%BA%E4%BA%8EBigInteger%E7%9A%84%E5%86%99%E9%A2%98/"/>
    <id>http://example.com/2021/11/23/%E5%9F%BA%E4%BA%8EBigInteger%E7%9A%84%E5%86%99%E9%A2%98/</id>
    <published>2021-11-23T13:51:28.000Z</published>
    <updated>2021-11-23T14:06:48.448Z</updated>
    
    <content type="html"><![CDATA[<p>123</p><p>在学校OJ上写了一道题  被一道题恶心两个小时之余</p><p>说到底还是自己太菜的原因</p><p><img src="http://119.91.223.39:8888/picture/1.png"></p><p>题目其实很容易 但是这个输入卡的人傻了</p><p>用nextInt() nextLong()都会爆</p><p>后面我写的是字符串</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            String s = scanner.next();</span><br><span class="line">            <span class="keyword">int</span> m = s.length();</span><br><span class="line">            <span class="keyword">if</span>(m == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">int</span> k = s.charAt(<span class="number">0</span>)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(k%<span class="number">8</span>==<span class="number">0</span>) System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="number">2</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> q = s.charAt(<span class="number">0</span>)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> w = s.charAt(<span class="number">1</span>)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> k = q*<span class="number">10</span>+w;</span><br><span class="line">                <span class="keyword">if</span>(k%<span class="number">8</span>==<span class="number">0</span>) System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (m == <span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> q = s.charAt(<span class="number">0</span>)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> w = s.charAt(<span class="number">1</span>)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> e = s.charAt(<span class="number">2</span>)-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> k = q*<span class="number">100</span>+w*<span class="number">10</span>+e;</span><br><span class="line">                <span class="keyword">if</span> (k % <span class="number">8</span> == <span class="number">0</span>) System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(m &gt; <span class="number">3</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> st = s.charAt(m - <span class="number">1</span>) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> st1 = s.charAt(m - <span class="number">2</span>) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> st2 = s.charAt(m - <span class="number">3</span>) - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                <span class="keyword">int</span> ans = st + st1*<span class="number">10</span> +  st2*<span class="number">100</span>;</span><br><span class="line">                <span class="keyword">if</span> (ans % <span class="number">8</span> == <span class="number">0</span>) System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">                <span class="keyword">else</span> System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        scanner.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刚开始 判断k的位数是1位是  我用的判定条件是  if(k == 8) 漏了k==0的这种情况  0也是0的倍数</p><p>看了一位学弟的代码 让我尤为惊人</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.math.BigInteger;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">B</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        BigInteger  a = scanner.nextBigInteger();</span><br><span class="line">        BigInteger b=<span class="keyword">new</span> BigInteger(<span class="string">&quot;8&quot;</span>);</span><br><span class="line">        BigInteger c=BigInteger.ZERO;</span><br><span class="line">        <span class="keyword">if</span>(a.mod(b)==c) System.out.println(<span class="string">&quot;yes&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> System.out.println(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>青出如蓝  让我觉得学弟学妹太优秀了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;123&lt;/p&gt;
&lt;p&gt;在学校OJ上写了一道题  被一道题恶心两个小时之余&lt;/p&gt;
&lt;p&gt;说到底还是自己太菜的原因&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://119.91.223.39:8888/picture/1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;题目其实很容易 但是这个输入</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>BigInteger</title>
    <link href="http://example.com/2021/11/23/BigInteger/"/>
    <id>http://example.com/2021/11/23/BigInteger/</id>
    <published>2021-11-23T13:44:15.000Z</published>
    <updated>2021-11-23T13:50:54.496Z</updated>
    
    <content type="html"><![CDATA[<p>BigInteger !!!</p><p>当我们输入的数据超过long的范围的时候我们就应该考虑一下这个了</p><p>在Java中，由CPU原生提供的整型最大范围是64位<code>long</code>型整数。使用<code>long</code>型整数可以直接通过CPU指令进行计算，速度非常快。</p><p>如果我们使用的整数范围超过了<code>long</code>型怎么办？这个时候，就只能用软件来模拟一个大整数。<code>java.math.BigInteger</code>就是用来表示任意大小的整数。<code>BigInteger</code>内部用一个<code>int[]</code>数组来模拟一个非常大的整数：</p><p>使用必须先导包</p><p> <code>import java.math.*</code></p><p><strong>Ⅰ基本函数：</strong></p><p><strong>1.valueOf(parament); 将参数转换为制定的类型</strong></p><p><strong>比如 int a=3;</strong></p><p><strong>BigInteger b=BigInteger.valueOf(a);</strong></p><p><strong>则b=3;</strong></p><p><strong>String s=”12345”;</strong></p><p><strong>BigInteger c=BigInteger.valueOf(s);</strong></p><p><strong>则c=12345；</strong></p><p><strong>2.add(); 大整数相加</strong></p><p><strong>BigInteger a=new BigInteger(“23”);</strong></p><p><strong>BigInteger b=new BigInteger(“34”);</strong></p><p><strong>a. add(b);</strong></p><p><strong>3.subtract(); 相减</strong></p><p><strong>4.multiply(); 相乘</strong></p><p><strong>5.divide(); 相除取整</strong></p><p><strong>6.remainder(); 取余</strong></p><p><strong>7.pow(); a.pow(b)=a^b</strong></p><p><strong>8.gcd(); 最大公约数</strong></p><p><strong>9.abs(); 绝对值</strong></p><p><strong>10.negate(); 取反数</strong></p><p><strong>11.mod(); a.mod(b)=a%b=a.remainder(b);</strong></p><p><strong>12.max(); min();</strong></p><p><strong>13.punlic int comareTo();</strong></p><p><strong>14.boolean equals(); 是否相等</strong></p><p><strong>15.BigInteger构造函数：</strong></p><p><strong>一般用到以下两种：</strong></p><p><strong>BigInteger(String val);</strong></p><p><strong>将指定字符串转换为十进制表示形式；</strong></p><p><strong>BigInteger(String val,int radix);</strong></p><p><strong>将指定基数的 BigInteger 的字符串表示形式转换为 BigInteger</strong></p><p><strong>Ⅱ.基本常量：</strong></p><p><strong>A=BigInteger.ONE 1</strong></p><p><strong>B=BigInteger.TEN 10</strong></p><p><strong>C=BigInteger.ZERO 0</strong></p><p><strong>Ⅲ.基本操作</strong></p><p><strong>1. 读入：</strong></p><p><strong>用Scanner类定义对象进行控制台读入,Scanner类在java.util.*包中</strong></p><p><strong>Scanner cin=new Scanner(System.in);// 读入</strong></p><p><strong>while(cin.hasNext()) //等同于!=EOF</strong></p><p><strong>{</strong></p><p><strong>int n;</strong></p><p><strong>BigInteger m;</strong></p><p><strong>n=cin.nextInt(); //读入一个int;</strong></p><p><strong>m=cin.BigInteger();//读入一个BigInteger;</strong></p><p><strong>System.out.print(m.toString());</strong></p><p><strong>}</strong></p><p><strong>if( a.compareTo(b) == 0 ) System.*out*.println(“a == b”); //大整数a==b</strong></p><p><strong>else if( a.compareTo(b) &gt; 0 ) System.*out*.println(“a &gt; b”); //大整数a&gt;b</strong></p><p><strong>else if( a.compareTo(b) &lt; 0 ) System.*out*.println(“a &lt; b”); //大整数a&lt;b</strong></p><p><strong>//大整数绝对值</strong></p><p><strong>System.*out*.println(a.abs()); //大整数a的绝对值</strong></p><p><strong>//大整数的幂</strong></p><p><strong>int exponent=10;</strong></p><p><strong>System.*out*.println(a.pow(exponent)); //大整数a的exponent次幂</strong></p><p><strong>//返回大整数十进制的字符串表示</strong></p><p><strong>System.*out*.println(a.toString());</strong></p><p><strong>//返回大整数p进制的字符串表示</strong></p><p><strong>int p=8;</strong></p><p><strong>System.*out*.println(a.toString(p));</strong></p><p>参考链接</p><p><a href="https://blog.csdn.net/qfikh/article/details/52832196">https://blog.csdn.net/qfikh/article/details/52832196</a></p><p><a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1279767986831393">https://www.liaoxuefeng.com/wiki/1252599548343744/1279767986831393</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;BigInteger !!!&lt;/p&gt;
&lt;p&gt;当我们输入的数据超过long的范围的时候我们就应该考虑一下这个了&lt;/p&gt;
&lt;p&gt;在Java中，由CPU原生提供的整型最大范围是64位&lt;code&gt;long&lt;/code&gt;型整数。使用&lt;code&gt;long&lt;/code&gt;型整数可以直接通过</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java刷题模版</title>
    <link href="http://example.com/2021/11/22/java%E5%88%B7%E9%A2%98%E6%A8%A1%E7%89%88/"/>
    <id>http://example.com/2021/11/22/java%E5%88%B7%E9%A2%98%E6%A8%A1%E7%89%88/</id>
    <published>2021-11-22T12:19:19.000Z</published>
    <updated>2021-11-22T12:25:26.596Z</updated>
    
    <content type="html"><![CDATA[<p>数据输入<br>一般我常用的数据输入方法有两种，Scanner和BufferedReader。BufferedReader可以读一行，速度比Scanner快，所以数据较多的时候使用。注意BufferedReader用完记得关。</p><p>Scanner</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scan.nextInt(); <span class="comment">// String: next(), double: nextDouble()</span></span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            nums[i] = scan.nextInt();</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BufferedReader</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">        <span class="keyword">int</span> n = Integer.parseInt(reader.readLine());</span><br><span class="line">        <span class="keyword">int</span>[] nums = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">        String[] strs = reader.readLine().split(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">            nums[i] = Integer.parseInt(strs[i]);</span><br><span class="line">        <span class="comment">// ...</span></span><br><span class="line">        reader.close(); <span class="comment">// 记得关闭</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>快速排序quickSort<br>快速排序要注意x取值的边界情况。取x = nums[left], nums分为[left, j]和[j + 1, right]，或x = nums[right], nums分为[left, i - 1]和[i, right],否则会StackOverflow。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (left &gt;= right)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> i = left - <span class="number">1</span>, j = right + <span class="number">1</span>, x = nums[left];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span> (nums[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span> (nums[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = nums[i];</span><br><span class="line">            nums[i] = nums[j];</span><br><span class="line">            nums[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    quickSort(nums, left, j);</span><br><span class="line">    quickSort(nums, j + <span class="number">1</span>, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 785, LeetCode 912</p><p>归并排序mergeSort<br>mergeSort时间复杂度是稳定O(nlogn)，空间复杂度O(n)，稳定的。quickSort时间复杂度平均O(nlogn)，最坏O(n^2)，最好O(nlogn)，空间复杂度O(nlogn)，不稳定的。</p><p>public void mergeSort(int[] nums, int left, int right) {<br>    if (left &gt;= right)<br>        return;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">mergeSort(nums, left, mid);</span><br><span class="line">mergeSort(nums, mid + <span class="number">1</span>, right);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k = <span class="number">0</span>, i = left, j = mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span>[] temp = <span class="keyword">new</span> <span class="keyword">int</span>[right - left + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right)</span><br><span class="line">    <span class="keyword">if</span> (nums[i] &lt; nums[j])</span><br><span class="line">        temp[k++] = nums[i++];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        temp[k++] = nums[j++];</span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid)</span><br><span class="line">    temp[k++] = nums[i++];</span><br><span class="line"><span class="keyword">while</span> (j &lt;= right)</span><br><span class="line">    temp[k++] = nums[j++];</span><br><span class="line"><span class="keyword">for</span> (i = left, j = <span class="number">0</span>; i &lt;= right; i++, j++)</span><br><span class="line">    nums[i] = temp[j];</span><br></pre></td></tr></table></figure><p>}<br>例题：AcWing 787, LeetCode 912</p><p>二分搜索binarySearch<br>二分搜索逼近左边界，区间[left, right]被分为左区间[left, mid]和右区间[mid + 1, right]。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">binarySearchLeft</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            right = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[left];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二分搜索逼近右边界，区间[left, right]被分为左区间[left, mid - 1]和右区间[mid, right]。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">binarySearchRight</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (left &lt; right) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (check(mid))</span><br><span class="line">            left = mid;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[left];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>暑假在LeetCode打卡的时候发现还有第三种模板,nums[mid] == target 直接return，区间[left, right]被分为[left, mid - 1]和[mid + 1, right]。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">searchInsert</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (left &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = left + (right - left) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span> (nums[mid] == target)</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (check(mid))</span><br><span class="line">                right = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 789, LeetCode 34, LeetCode 35</p><p>KMP</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kmp</span><span class="params">(String text, String pattern)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = pattern.length();</span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = text.length();</span><br><span class="line">    <span class="keyword">int</span>[] next = <span class="keyword">new</span> <span class="keyword">int</span>[m + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>, j = <span class="number">0</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; pattern.charAt(i - <span class="number">1</span>) != pattern.charAt(j))</span><br><span class="line">            j = next[j];</span><br><span class="line">        <span class="keyword">if</span> (pattern.charAt(i - <span class="number">1</span>) == pattern.charAt(j))</span><br><span class="line">            j++;</span><br><span class="line">        next[i] = j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (j &gt; <span class="number">0</span> &amp;&amp; text.charAt(i - <span class="number">1</span>) != pattern.charAt(j))</span><br><span class="line">            j = next[j];</span><br><span class="line">        <span class="keyword">if</span> (text.charAt(i - <span class="number">1</span>) == pattern.charAt(j))</span><br><span class="line">            j++;</span><br><span class="line">        <span class="keyword">if</span> (j == m)</span><br><span class="line">            <span class="keyword">return</span> i - m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 831, LeetCode 28</p><p>Trie</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SIZE = <span class="number">26</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">TrieNode</span> </span>&#123;</span><br><span class="line">    TrieNode[] children = <span class="keyword">new</span> TrieNode[SIZE];</span><br><span class="line">    <span class="keyword">int</span> times;</span><br><span class="line"></span><br><span class="line">    TrieNode() &#123;</span><br><span class="line">        times = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++)</span><br><span class="line">            children[i] = <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> TrieNode root = <span class="keyword">new</span> TrieNode();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String word)</span> </span>&#123;</span><br><span class="line">    TrieNode node = root;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> index = word.charAt(i) - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (node.children[index] == <span class="keyword">null</span>)</span><br><span class="line">            node.children[index] = <span class="keyword">new</span> TrieNode();</span><br><span class="line">        node = node.children[index];</span><br><span class="line">    &#125;</span><br><span class="line">    node.times++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">query</span><span class="params">(String word)</span> </span>&#123;</span><br><span class="line">    TrieNode node = root;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; word.length(); i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> index = word.charAt(i) - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (node.children[index] == <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        node = node.children[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> node.times;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 835</p><p>并查集<br>朴素并查集</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] p;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (p[x] != x)</span><br><span class="line">        p[x] = find(p[x]);</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p[find(a)] = find(b);</span><br></pre></td></tr></table></figure><p>例题：AcWing 836</p><p>图的存储<br>n个点，m条边，m约等于n2n2叫做稠密图，用邻接矩阵存储；n个点，m条边，m远小于n2n2叫做稀疏图，用邻接表存储。</p><p>邻接矩阵</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] g;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] dist;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span>[] visit;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        n = scan.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = scan.nextInt();</span><br><span class="line">        g = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">        dist = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        visit = <span class="keyword">new</span> <span class="keyword">boolean</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                <span class="keyword">if</span> (i == j)</span><br><span class="line">                    g[i][j] = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    g[i][j] = INF;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = scan.nextInt(), y = scan.nextInt(), z = scan.nextInt();</span><br><span class="line">            g[a][b] = Math.min(g[a][b], c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = dijkstra();</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>邻接表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map&lt;Integer, List&lt;Node&gt;&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] dist;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span>[] visit;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> node;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> length;</span><br><span class="line">    </span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> node, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.node = node;</span><br><span class="line">            <span class="keyword">this</span>.length = length;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        n = scan.nextInt();</span><br><span class="line">        dist = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">        visit = <span class="keyword">new</span> <span class="keyword">boolean</span>[n + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> m = scan.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            map.put(i, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = scan.nextInt(), y = scan.nextInt(), z = scan.nextInt();</span><br><span class="line">            map.get(x).add(<span class="keyword">new</span> Node(y, z));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> res = dijkstra();</span><br><span class="line">        System.out.println(res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Dijkstra<br>边权不能是负数！<br>1.dist[1] = 0, dist[i] = +∞<br>2.for i 1 ~ n<br>t &lt;- 不在s中的，距离最近的点 – n2n2 / n<br>s &lt;- t – n<br>用t更新其他点的距离 – m / mlogn</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dijkstra</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dist[i] = INF;</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            <span class="keyword">if</span> (!visit[j] &amp;&amp; (t == -<span class="number">1</span> || dist[t] &gt; dist[j]))</span><br><span class="line">                t = j;</span><br><span class="line">        <span class="keyword">if</span> (t == n)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            dist[j] = Math.min(dist[j], dist[t] + g[t][j]);</span><br><span class="line">        visit[t] = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dist[n] == INF)</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 849</p><p>优化Dijkstra</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dijkstra</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            dist[i] = INF;</span><br><span class="line">        dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">        PriorityQueue&lt;Node&gt; heap = <span class="keyword">new</span> PriorityQueue&lt;&gt;((node1, node2) -&gt; node1.length - node2.length);</span><br><span class="line">        heap.add(<span class="keyword">new</span> Node(<span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="keyword">while</span> (!heap.isEmpty()) &#123;</span><br><span class="line">            Node top = heap.poll();</span><br><span class="line">            <span class="keyword">int</span> length = top.length, cur = top.node;</span><br><span class="line">            <span class="keyword">if</span> (visit[cur])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            visit[cur] = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (Node next: map.get(cur)) &#123;</span><br><span class="line">                <span class="keyword">int</span> node = next.node, cost = next.length;</span><br><span class="line">                <span class="keyword">if</span> (dist[node] &gt; length + cost) &#123;</span><br><span class="line">                    dist[node] = length + cost;</span><br><span class="line">                    heap.add(<span class="keyword">new</span> Node(node, dist[node]));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (dist[n] == INF)</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> dist[n];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 850</p><p>Bellman-ford<br>O(nm)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">bellman_ford</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dist[i] = INF;</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">            backup[j] = dist[j]; <span class="comment">// deep copy</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; m; k++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x = edges[k].x;</span><br><span class="line">            <span class="keyword">int</span> y = edges[k].y;</span><br><span class="line">            <span class="keyword">int</span> z = edges[k].z;</span><br><span class="line">            dist[y] = Math.min(dist[y], backup[x] + z);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dist[n] &gt; INF / <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 853</p><p>SPFA (队列优化的Bellman-ford算法)<br>一般O(m)，最坏O(nm)。n表示点数，m表示边数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">spfa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">        dist[i] = INF;</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    Queue&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.add(<span class="number">1</span>);</span><br><span class="line">    visit[<span class="number">1</span>] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = queue.poll();</span><br><span class="line">        visit[t] = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (Node cur: map.get(t)) &#123;</span><br><span class="line">            <span class="keyword">int</span> node = cur.node, length = cur.length;</span><br><span class="line">            <span class="keyword">if</span> (dist[node] &gt; dist[t] + length) &#123;</span><br><span class="line">                dist[node] = dist[t] + length;</span><br><span class="line">                <span class="keyword">if</span> (!visit[node]) &#123;</span><br><span class="line">                    queue.add(node);</span><br><span class="line">                    visit[node] = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 851</p><p>SPFA 判断图中是否存在负环<br>O(nm)，n表示点数，m表示边数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">spfa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Queue&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        queue.add(i);</span><br><span class="line">        visit[i] = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> t = queue.poll();</span><br><span class="line">        visit[t] = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (Node cur: map.get(t)) &#123;</span><br><span class="line">            <span class="keyword">int</span> node = cur.node, length = cur.length;</span><br><span class="line">            <span class="keyword">if</span> (dist[node] &gt; dist[t] + length) &#123;</span><br><span class="line">                dist[node] = dist[t] + length;</span><br><span class="line">                count[node] = count[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (count[node] &gt;= n)</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                <span class="keyword">if</span> (!visit[node]) &#123;</span><br><span class="line">                    queue.add(node);</span><br><span class="line">                    visit[node] = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例题：AcWing 852</p><p>Floyd<br>O(n3)O(n3)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">floyd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">                d[i][j] = Math.min(d[i][j], d[i][k] + d[k][j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>例题：AcWing 854</p><p>作者：Lic<br>链接：<a href="https://www.acwing.com/file_system/file/content/whole/index/content/5873/">https://www.acwing.com/file_system/file/content/whole/index/content/5873/</a><br>来源：AcWing<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;数据输入&lt;br&gt;一般我常用的数据输入方法有两种，Scanner和BufferedReader。BufferedReader可以读一行，速度比Scanner快，所以数据较多的时候使用。注意BufferedReader用完记得关。&lt;/p&gt;
&lt;p&gt;Scanner&lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>springboot程序</title>
    <link href="http://example.com/2021/11/19/springboot%E7%A8%8B%E5%BA%8F/"/>
    <id>http://example.com/2021/11/19/springboot%E7%A8%8B%E5%BA%8F/</id>
    <published>2021-11-19T14:32:33.000Z</published>
    <updated>2021-11-19T14:49:18.032Z</updated>
    
    <content type="html"><![CDATA[<p>   新建一个maven工程   注意选择JDK的版本 如果版本过高可能会不支持 最好选择8 9 11</p><p><img src="https://i.loli.net/2021/11/19/vyPn9YbNDIqgj5O.png"></p><p>像我第一次踩坑就是因为JDK是17  可能还不支持 把17改为8 就好了  所以大家选择的时候还是尽量选择一起的稳定版本</p><p><img src="https://i.loli.net/2021/11/19/ywctzqRAQuDHvaX.jpg"></p><p>修改名称</p><p><img src="https://i.loli.net/2021/11/19/goJIalrzDH7Lqh1.png"></p><p>新建一个包boot</p><p>在boot包下创建一个类 MainApplication</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.boot;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(MainApplication.class,args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>点击pom.xml 进行导包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>建立controller层</p><p>创建了类HelloController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.boot.Controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">hello01</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;第一个springboot hello   &quot;</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;Springboot程序启动成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>点击启动MainApplication</p><p><img src="https://i.loli.net/2021/11/19/ZSj5ATgpJKtFvRG.png"></p><p>如果显示端口被占用</p><p><img src="https://i.loli.net/2021/11/19/NGvJwUrAL3OYQdj.png"></p><p>则我们在resource包建一个文件application.properties</p><p><code>server.port=8111</code></p><p>定义这个没有被使用的端口</p><p><img src="https://i.loli.net/2021/11/19/jcBPxiRn3Ho68hu.png"></p><p>输出了我们写的内容 表示启动成功</p><p>我们用127.0.0.1+端口 /hello 来访问     例如我的就是127.0.0.1:8111/hello</p><p><img src="https://i.loli.net/2021/11/19/WeOlqNGX29dZ4Kt.png"></p><p>就可以显示成功啦</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;   新建一个maven工程   注意选择JDK的版本 如果版本过高可能会不支持 最好选择8 9 11&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2021/11/19/vyPn9YbNDIqgj5O.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;像我第一次踩坑就是</summary>
      
    
    
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>nginx和servelt</title>
    <link href="http://example.com/2021/11/17/nginx%E5%92%8Cservelt/"/>
    <id>http://example.com/2021/11/17/nginx%E5%92%8Cservelt/</id>
    <published>2021-11-17T13:41:46.000Z</published>
    <updated>2021-11-17T13:55:11.291Z</updated>
    
    <content type="html"><![CDATA[<p>  最近再写自己的网站和自己的项目  很高兴一直有人带着我学习，在我迷茫的时候指导一下我。</p><p>最近遇见了ip+端口转换为域名的问题</p><p>本来我用境外服务器可以直接用80端口  用起来也很方便 不用备案啥的 但是就是太容易挂了  </p><p>所以下定决心撸了个腾讯云的服务器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"># For more information on configuration, see:</span><br><span class="line">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class="line">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class="line"></span><br><span class="line">user root;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class="line">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class="line">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line"></span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line"></span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">  </span><br><span class="line">    server &#123;</span><br><span class="line">        listen       8080 default_server;</span><br><span class="line">        listen       [::]:8080 default_server;</span><br><span class="line">        server_name  www.sy.huttop.top;</span><br><span class="line">        </span><br><span class="line">        root         /root/java/;        #修改为root         /data/www;</span><br><span class="line">        </span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">         location / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  server &#123;</span><br><span class="line">        listen       8888 default_server;</span><br><span class="line">        listen       [::]:8888 default_server;</span><br><span class="line">        server_name www.huttop.top;</span><br><span class="line">        </span><br><span class="line">        root         /root/zhuye/;        #修改为root         /data/www;</span><br><span class="line">        </span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这是配置文件  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  最近再写自己的网站和自己的项目  很高兴一直有人带着我学习，在我迷茫的时候指导一下我。&lt;/p&gt;
&lt;p&gt;最近遇见了ip+端口转换为域名的问题&lt;/p&gt;
&lt;p&gt;本来我用境外服务器可以直接用80端口  用起来也很方便 不用备案啥的 但是就是太容易挂了  &lt;/p&gt;
&lt;p&gt;所以下定</summary>
      
    
    
    
    
    <category term="nginx" scheme="http://example.com/tags/nginx/"/>
    
    <category term="网络" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>pdf水印程序1</title>
    <link href="http://example.com/2021/11/15/pdf/"/>
    <id>http://example.com/2021/11/15/pdf/</id>
    <published>2021-11-15T07:14:06.000Z</published>
    <updated>2021-11-15T07:26:59.872Z</updated>
    
    <content type="html"><![CDATA[<p>  所需要的工具 一台服务器  一个可以编译jar的java环境 nginx用来正向代理</p><p>xshell连接服务器</p><p>安装java环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk</span><br></pre></td></tr></table></figure><p>查看java是否安装好</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><p>创建自己项目的路径并且cd到该路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir java</span><br><span class="line">cd java</span><br></pre></td></tr></table></figure><p>用命令让他跑起来</p><p>Linux启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar pdf-service-0.0.1-SNAPSHOT.jar  </span><br><span class="line">--host=http://161.117.229.248/</span><br><span class="line">--pdfPassword=2021 --footerDesc=\u9875\u811a\u6587\u5b57  </span><br><span class="line">--watermarkPic=https://www.wwei.cn/yasuotu/images/logo.png  </span><br><span class="line">--basicUrl=tmp/resources/static/pdf/    </span><br><span class="line">--location=10,10,30,30 &gt; nohup.out 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>这里注意把它copy去浏览器 变成一行去粘贴 这里只是方便看的参数的意义</p><p>Linux查看日志<br><code>tail -f nohup.out</code></p><p>配置参数<br>host:zip下载域名<br>location:水印图片坐标<br>pdfPassword:pdf保护密码<br>footerDesc:底部水印文案(unicode编码)<br>watermarkPic:外网可访问的水印图片地址<br>basicUrl:输出pdf、zip的文件保存目录</p><p>查看包含“java”的所有进程</p><p>ps -ef |grep java </p><p><img src="https://i.loli.net/2021/11/15/Mx38SdDYwjAyH4P.png"></p><p>杀死进程</p><p><code>kill -9 id</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  所需要的工具 一台服务器  一个可以编译jar的java环境 nginx用来正向代理&lt;/p&gt;
&lt;p&gt;xshell连接服务器&lt;/p&gt;
&lt;p&gt;安装java环境&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="linux" scheme="http://example.com/tags/linux/"/>
    
    <category term="nginx" scheme="http://example.com/tags/nginx/"/>
    
  </entry>
  
</feed>
