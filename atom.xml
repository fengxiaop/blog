<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>这是一个记录着一个人成长的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-21T08:24:53.079Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fengxiao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>第一届ACC杯全国高校联赛</title>
    <link href="http://example.com/2022/03/20/%E7%AC%AC%E4%B8%80%E5%B1%8AACC(AcWing%20Cup)%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E8%81%94%E8%B5%9B/"/>
    <id>http://example.com/2022/03/20/%E7%AC%AC%E4%B8%80%E5%B1%8AACC(AcWing%20Cup)%E5%85%A8%E5%9B%BD%E9%AB%98%E6%A0%A1%E8%81%94%E8%B5%9B/</id>
    <published>2022-03-20T12:52:32.554Z</published>
    <updated>2022-03-21T08:24:53.079Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第一届ACC-AcWing-Cup-全国高校联赛"><a href="#第一届ACC-AcWing-Cup-全国高校联赛" class="headerlink" title="第一届ACC(AcWing Cup)全国高校联赛"></a>第一届ACC(AcWing Cup)全国高校联赛</h1><p>Acwing举办的高校联赛比赛 </p><p>Rank(1381/7567) 过题2/3</p><h2 id="题目A"><a href="#题目A" class="headerlink" title="题目A"></a>题目A</h2><p>十六进制是一种基数为 1616 的计数系统，是一种逢 1616 进 11 的进位制。</p><p>通常用数字 0、1、2、3、4、5、6、7、8、90、1、2、3、4、5、6、7、8、9 和字母 A、B、C、D、E、FA、B、C、D、E、F 表示，其中: A∼FA∼F 表示 10∼1510∼15，这些称作十六进制数字。</p><p>观察这些数字的图案，我们可以发现，有些数字上面包含圈圈，具体来说：</p><ul><li>数字 0,4,6,9,A,D0,4,6,9,A,D 中包含一个圈。</li><li>数字 8,B8,B 中包含两个圈。</li><li>数字 1,2,3,5,7,C,E,F1,2,3,5,7,C,E,F 中不含圈。</li></ul><p>现在，给定一个十进制整数 nn，请你将其转化为十六进制表示，并数一数其十六进制表示中一共含有多少个圈圈。</p><h4 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h4><p>一个整数 nn。</p><h4 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h4><p>一个整数，表示整数 nn 的十六进制表示包含的圈圈总数。</p><h4 id="数据范围"><a href="#数据范围" class="headerlink" title="数据范围"></a>数据范围</h4><p>前三个测试点满足 0≤n≤1000≤n≤100,<br>所有测试点满足 0≤n≤2×1090≤n≤2×109。</p><h4 id="输入样例1："><a href="#输入样例1：" class="headerlink" title="输入样例1："></a>输入样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">11</span><br></pre></td></tr></table></figure><h4 id="输出样例1："><a href="#输出样例1：" class="headerlink" title="输出样例1："></a>输出样例1：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输入样例2："><a href="#输入样例2：" class="headerlink" title="输入样例2："></a>输入样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">14</span><br></pre></td></tr></table></figure><h4 id="输出样例2："><a href="#输出样例2：" class="headerlink" title="输出样例2："></a>输出样例2：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>简单模拟即可  注意特判0  每次都在这里栽跟头…</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.ACC;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">long</span> n = scanner.nextLong();</span><br><span class="line">        <span class="keyword">long</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>)     System.out.println(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span>&#123;<span class="keyword">while</span>(n &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">long</span> m = n% <span class="number">16</span>;</span><br><span class="line"><span class="comment">//            System.out.println(m);</span></span><br><span class="line">            <span class="keyword">if</span>(m == <span class="number">0</span>|| m == <span class="number">4</span> || m == <span class="number">6</span> || m==<span class="number">9</span> || m== <span class="number">10</span>||m == <span class="number">13</span>) ans++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(m == <span class="number">8</span> || m == <span class="number">11</span>) ans +=<span class="number">2</span>;</span><br><span class="line">            n = n / <span class="number">16</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(ans);</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="题目B"><a href="#题目B" class="headerlink" title="题目B"></a>题目B</h2><p>农夫约翰有 nn 片连续的农田，编号依次为 1∼n1∼n。</p><p>其中有 kk 片农田中装有洒水器。</p><p>装有洒水器的农田的编号<strong>从小到大</strong>依次为 x1,x2,…,xkx1,x2,…,xk。</p><p>在某个炎热的中午，约翰觉得是时候给他的所有农田浇水了。</p><p>每个洒水器在打开以后，向两侧方向洒水，并且随着开启时间延长，有效覆盖距离也不断增长。</p><p>具体来说，我们将第 xixi 片农田中的洒水器打开，经过 11 秒后，第 xixi 片农田被其覆盖，经过 22 秒后，第 [xi−1,xi+1][xi−1,xi+1] 片农田被其覆盖，经过 jj 秒后，第 [xi−(j−1),xi+(j−1)][xi−(j−1),xi+(j−1)] 片农田被其覆盖。</p><p>注意，每个洒水器的有效覆盖距离在每经过<strong>整数秒</strong>后，才会有所增长。</p><p>例如，经过 2.52.5 秒后，被第 xixi 片农田中的洒水器覆盖的农田仍是第 [xi−1,xi+1][xi−1,xi+1] 片农田，而不是第 [xi−1.5,xi+1.5][xi−1.5,xi+1.5] 片农田。</p><p>现在，约翰将所有洒水器同时打开，请问经过多少秒后，所有农田均被灌溉。</p><h4 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h4><p>第一行包含整数 TT，表示共有 TT 组测试数据。</p><p>每组数据第一行包含两个整数 n,kn,k。</p><p>第二行包含 kk 个整数 x1,x2,…,xkx1,x2,…,xk。</p><h4 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h4><p>每组数据输出一行答案。</p><h4 id="数据范围-1"><a href="#数据范围-1" class="headerlink" title="数据范围"></a>数据范围</h4><p>前三个测试点满足 1≤n≤51≤n≤5,<br>所有测试点满足 1≤T≤2001≤T≤200，1≤n≤2001≤n≤200，1≤k≤n1≤k≤n，1≤xi≤n1≤xi≤n，xi−1&lt;xixi−1&lt;xi，TT 组数据的 nn 相加之和不超过 200200。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">5 1</span><br><span class="line">3</span><br><span class="line">3 3</span><br><span class="line">1 2 3</span><br><span class="line">4 1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">1</span><br><span class="line">4</span><br></pre></td></tr></table></figure><p>模拟即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package com.ACC;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> T = scanner.nextInt();</span><br><span class="line">        <span class="keyword">int</span>[] n = <span class="keyword">new</span> <span class="keyword">int</span>[T];</span><br><span class="line">        <span class="keyword">int</span>[] k = <span class="keyword">new</span> <span class="keyword">int</span>[T];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++) &#123;</span><br><span class="line">            n[i] = scanner.nextInt();</span><br><span class="line">            k[i] = scanner.nextInt();</span><br><span class="line">            <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[k[i]];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; k[i]; j++) &#123;</span><br><span class="line">                a[j] = scanner.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> q = n[i] - a[k[i] -<span class="number">1</span>]+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> ans = Math.max(a[<span class="number">0</span>],q);</span><br><span class="line">            <span class="keyword">if</span>(k[i] == <span class="number">1</span>)   ans =Math.max(a[<span class="number">0</span>],n[i] - a[<span class="number">0</span>]+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j + <span class="number">1</span> &lt; k[i]; j++) &#123;</span><br><span class="line">                    ans = Math.max(ans, (a[j + <span class="number">1</span>] - a[j]+<span class="number">2</span>)/<span class="number">2</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(ans);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目C</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;第一届ACC-AcWing-Cup-全国高校联赛&quot;&gt;&lt;a href=&quot;#第一届ACC-AcWing-Cup-全国高校联赛&quot; class=&quot;headerlink&quot; title=&quot;第一届ACC(AcWing Cup)全国高校联赛&quot;&gt;&lt;/a&gt;第一届ACC(AcWing </summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Cookie与Session的区别</title>
    <link href="http://example.com/2022/03/17/Cookie%E4%B8%8ESession%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://example.com/2022/03/17/Cookie%E4%B8%8ESession%E7%9A%84%E5%8C%BA%E5%88%AB/</id>
    <published>2022-03-17T03:01:33.168Z</published>
    <updated>2022-03-17T07:18:38.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cookie与Session的区别"><a href="#Cookie与Session的区别" class="headerlink" title="Cookie与Session的区别"></a>Cookie与Session的区别</h1><p>二者都是用来跟踪浏览器用户身份的</p><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie:"></a>Cookie:</h2><ul><li>存在浏览器里，可以设置过期时间</li><li>每次访问浏览器时，浏览器都会自动在Header中携带cookie</li><li>如果浏览器禁止了Cookie  可以使用URL重写机制，将信息保存在URL中</li></ul><h2 id="Session："><a href="#Session：" class="headerlink" title="Session："></a>Session：</h2><ul><li>存在服务端，由服务器维护，一段时间session就失效了</li><li><strong>本质上，session 还是通过 cookie 实现的</strong>。浏览器的 cookie 中只保存一个 <code>sessionId</code>，所有其他信息均保存在服务端，由 <code>sessionId</code> 标识</li><li>Session 失效，其实是服务器设置了失效时间。如果用户长时间不和服务器交互（比如 30 分钟），那么 session 就会被销毁；交互的话，就会刷新 session</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Cookie与Session的区别&quot;&gt;&lt;a href=&quot;#Cookie与Session的区别&quot; class=&quot;headerlink&quot; title=&quot;Cookie与Session的区别&quot;&gt;&lt;/a&gt;Cookie与Session的区别&lt;/h1&gt;&lt;p&gt;二者都是用来跟踪浏览</summary>
      
    
    
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>HTTP</title>
    <link href="http://example.com/2022/03/17/HTTP/"/>
    <id>http://example.com/2022/03/17/HTTP/</id>
    <published>2022-03-17T02:11:02.533Z</published>
    <updated>2022-03-17T02:42:57.898Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h1 id="HTTP请求方法"><a href="#HTTP请求方法" class="headerlink" title="HTTP请求方法"></a>HTTP请求方法</h1><blockquote><p>HTTP请求方法表明了要对给定资源执行的操作，每一个请求方法都实现了不同的语义，包括:GET,HEAD.POST,PUT,PATCH,DELECT,OPTIONS,以及不常用的CONNECT,TRACE.</p></blockquote><h3 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h3><p>获取服务器的指定资源。</p><h3 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h3><p>与 GET 方法一样，都是发出一个获取服务器指定资源的请求，但服务器只会返回 Header 而不会返回 Body。用于确认 URI 的有效性及资源更新的日期时间等。一个典型应用是下载文件时，先通过 HEAD 方法获取 Header，从中读取文件大小 <code>Content-Length</code>；然后再配合 <code>Range</code> 字段，分片下载服务器资源</p><h3 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h3><p>提交资源到服务器或者在服务器上新建资源</p><h3 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h3><p>：替换整个目标资源</p><h3 id="PATCH"><a href="#PATCH" class="headerlink" title="PATCH"></a>PATCH</h3><p>:替换目标资源的部分内容</p><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><p>:指定的资源。</p><h3 id="OPTIONS"><a href="#OPTIONS" class="headerlink" title="OPTIONS"></a>OPTIONS</h3><p>：用于描述目标资源的通信选项。可以用于检测服务器支持哪些 HTTP 方法，或者在 CORS 中发起一个预检请求，以检测实际请求是否可以被服务器所接受</p><h3 id="CONNECT"><a href="#CONNECT" class="headerlink" title="CONNECT"></a>CONNECT</h3><p>：建立一个到由目标资源标识的服务器的隧道</p><h3 id="TRACE"><a href="#TRACE" class="headerlink" title="TRACE"></a>TRACE</h3><p>：执行一个消息环回测试，返回到服务端的路径。客户端请求连接到目标服务器时可能会通过代理中转，通过 TRACE 方法可以查询发送出去的请求的一系列操作（<a href="https://imageslr.com/media/15993132198241.jpg">图示</a>）</p><h3 id="幂等的"><a href="#幂等的" class="headerlink" title="幂等的"></a><strong>幂等的</strong></h3><p>​    一个HTTP方法是幂等的，指的是同样的请求执行一次与执行多次的效果是一样的    ，幂等方法不应该具有副作用。</p><ul><li>常见的幂等方法： GET HEAD PUT DELETE OPTIONS</li><li>常见的非幂等方法：POST</li></ul><h3 id="安全的"><a href="#安全的" class="headerlink" title="安全的"></a><strong>安全的</strong></h3><p>​    一个HTTP方法是幂等的，说明此方法只对服务器进行只读的方法，不会修改服务器数据。</p><ul><li>常见的安全方法：GET，HEAD，OPTIONS</li><li>常见的不安全方法：PUT，DELETE，POST</li><li>所有安全的方法都是幂等的；有些不安全的方法如 DELETE 是幂等的，有些不安全的方法如 PUT 和 DELETE 则不是</li></ul><p><strong>可缓存的</strong>：GET、HEAD。</p><h3 id="GET与POST的区别"><a href="#GET与POST的区别" class="headerlink" title="GET与POST的区别"></a>GET与POST的区别</h3><table><thead><tr><th align="left"></th><th align="left">GET</th><th>POST</th></tr></thead><tbody><tr><td align="left">应用</td><td align="left">获取浏览器的数据</td><td>添加/修改浏览器的数据</td></tr><tr><td align="left">历史记录 / 书签</td><td align="left">可保留在浏览器历史记录中，或者收藏为书签</td><td>不可以</td></tr><tr><td align="left">Cacheable</td><td align="left">会被浏览器缓存</td><td>不会缓存</td></tr><tr><td align="left">幂等</td><td align="left">幂等，不会改变浏览器上的资源。</td><td>非幂等</td></tr><tr><td align="left">后退/刷新</td><td align="left">GET是无害的</td><td>重复提交POST表单</td></tr><tr><td align="left">参数位置</td><td align="left">query 中（直接明文暴露在链接中）</td><td>query 或 body 中</td></tr><tr><td align="left">参数长度</td><td align="left">2KB(2048个字符)</td><td>无限制</td></tr></tbody></table><h2 id="HTTP状态码"><a href="#HTTP状态码" class="headerlink" title="HTTP状态码"></a>HTTP状态码</h2><h3 id="信息响应（100–199）"><a href="#信息响应（100–199）" class="headerlink" title="信息响应（100–199）"></a>信息响应（100–199）</h3><ul><li>100 Continue：表明到目前为止都很正常，客户端可以继续发送请求或者忽略这个响应</li></ul><h3 id="成功响应-200-299"><a href="#成功响应-200-299" class="headerlink" title="成功响应(200-299)"></a>成功响应(200-299)</h3><ul><li>200 OK</li><li>201 Created   该请求已成功，并因此创建了一个新的资源，这通常是在POST请求之后后悔的响应</li><li>204 No Content：该请求已成功处理，但是返回的响应报文不包含实体的主体部分。通常用于只需要从客户端往服务器发送信息，而不需要返回数据时</li><li>206 Partial Content：服务器已经成功处理了部分 GET 请求，该请求必须包含 <code>Range</code> 头信息来指示客户端希望得到的内容范围。通常使用此类响应来实现断点续传，或者将一个大文档分为多个片段然后并行下载</li></ul><p>重定向(300-399)</p><ul><li><p>301 Moved Permanently:永久性重定向</p></li><li><p>302 临时性重定向，常见应用场景是是通过 302 跳转将所有的 HTTP 流量重定向到 HTTPS</p></li><li><p>303 See Other ：和302有着相同的功能，但303明确要求客户端应该采用GET方法获取资源</p></li><li><p><strong>304 Not Modified</strong>：如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304 响应不包含消息体</p></li><li><p><strong>307 Temporary Redirect</strong>：临时重定向。307 与 302 之间的唯一区别在于，当发送重定向请求的时候，307 状态码可以确保<strong>请求方法</strong>和消息主体不会发生变化；而如果使用 302 响应状态码，一些旧客户端会错误地将请求方法转换为 GET</p></li></ul><h3 id="客户端错误-400-499"><a href="#客户端错误-400-499" class="headerlink" title="客户端错误(400- 499)"></a>客户端错误(400- 499)</h3><ul><li>400 Bad Request :请求报文中存在语法问题，或者参数有误。</li><li>401 Unauthorized：未认证（没有登录）</li><li>403 Forbidden :没有权限(登陆了但没有权限)</li><li>404 Not Found ：找不到资源</li><li>405 Method Not Allowed</li></ul><h3 id="服务器错误-500-599"><a href="#服务器错误-500-599" class="headerlink" title="服务器错误(500-599)"></a>服务器错误(500-599)</h3><ul><li><p>500 Internet Server error :服务器遇见了不知道如何处理的情况</p></li><li><p>502 Bad Gateway：网关错误，作为网关或代理角色的服务器，从上游服务器（如tomcat、php-fpm）中接收到的响应是无效的</p></li><li><p>Service Unavailable：服务器无法处理请求，常见原因是服务器因维护或重载而停机</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTTP&quot;&gt;&lt;a href=&quot;#HTTP&quot; class=&quot;headerlink&quot; title=&quot;HTTP&quot;&gt;&lt;/a&gt;HTTP&lt;/h1&gt;&lt;h1 id=&quot;HTTP请求方法&quot;&gt;&lt;a href=&quot;#HTTP请求方法&quot; class=&quot;headerlink&quot; title=&quot;H</summary>
      
    
    
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>操作系统</title>
    <link href="http://example.com/2022/03/14/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/03/14/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-03-14T07:27:02.479Z</published>
    <updated>2022-03-16T07:47:44.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="什么是操作系统？"><a href="#什么是操作系统？" class="headerlink" title="什么是操作系统？"></a>什么是操作系统？</h2><ul><li><p>操作系统(Operating System)是管理计算机硬件和软件资源的程序 是计算机的基石</p></li><li><p><strong>操作系统本质上是一个运行在计算机上的软件程序 ，用于管理计算机硬件和软件资源。</strong> 举例：运行在你电脑上的所有应用程序都通过操作系统来调用系统内存以及磁盘等等硬件。</p></li><li><p><strong>操作系统存在屏蔽了硬件层的复杂性。</strong> 操作系统就像是硬件使用的负责人，统筹着各种相关事项。</p></li><li><p><strong>操作系统的内核（Kernel）是操作系统的核心部分，它负责系统的内存管理，硬件设备的管理，文件系统的管理以及应用程序的管理</strong>。 内核是连接应用程序和硬件的桥梁，决定着系统的性能和稳定性。</p></li></ul><p>根据进程访问资源的特点，我们可以把进程在系统上的运行分为两个级别：</p><ol><li>用户态(user mode) : 用户态运行的进程可以直接读取用户程序的数据。</li><li>系统态(kernel mode):可以简单的理解系统态运行的进程或程序几乎可以访问计算机的任何资源，不受限制。</li></ol><h2 id="线程与进程的关系"><a href="#线程与进程的关系" class="headerlink" title="线程与进程的关系"></a>线程与进程的关系</h2><p>线程是进程划分成最小的运行单位，一个进程在其执行的过程中可以产生多个线程。</p><p>线程与进程最大的区别是   </p><p>进程各部分是独立的  而各线程则不一定·</p><p>因为同一进程中的线程极有可能会相互影响。线程执行开销小，但不利于资源的管理和保护；而进程正相反</p><p>进程有哪几种状态</p><ul><li><strong>创建状态：</strong> 进程目前正在被创建，尚未到就绪状态。</li><li><strong>就绪状态：</strong> 进程已处于准备允许状态。即进程获得了除了处理器之外的一切所需资源。一但得到处理器资源(处理器分配的时间片)即可运行。</li><li><strong>运行状态</strong>： 进程正在处理器上上运行(单核 CPU 下任意时刻只有一个进程处于运行状态)。</li><li>**阻塞状态： **又称为等待状态，进程正在等待某一事件而暂停运行如等待某资源为可用或等待 IO 操作完成。即使处理器空闲，该进程也不能运行。</li><li><strong>结束状态：</strong> 进程正在从系统中消失。可能是进程正常结束或其他原因中断退出运行。</li></ul><h4 id="进程的五种状态"><a href="#进程的五种状态" class="headerlink" title="进程的五种状态"></a>进程的五种状态</h4><ul><li>创建状态   进程正在被创建，尚未到就绪状态</li><li>就绪状态    进程已处于准备运行状态，即进程获得了除了处理器之外的一切所需资源，一旦得到处理器资源(处理器分配的时间片)即可运行。</li><li>运行状态    进程正在处理器上上运行</li><li>阻塞状态    又称为等待状态，进程正在等待某一事件而暂停运行如等待某资源为可用或等待 IO 操作完成。即使处理器空闲，该进程也不能运行。</li><li>结束状态    进程正在从系统中消失。可能是进程正常结束或其他原因中断退出运行。</li></ul><h4 id="进程间的通信方式"><a href="#进程间的通信方式" class="headerlink" title="进程间的通信方式"></a>进程间的通信方式</h4><p>几种？  大约有七种</p><ul><li>管道/匿名管道</li><li>有名管道</li><li>信号</li><li>消息队列</li><li>信号量</li><li>共享内存</li><li>套接字</li></ul><h4 id="线程间的同步的方式"><a href="#线程间的同步的方式" class="headerlink" title="线程间的同步的方式"></a>线程间的同步的方式</h4><p>线程同步是两个或者多个共享关键资源的线程的并发执行，应该同步线程以避免关键的资源使用冲突，操作系统一般有下面三种线程同步的方式</p><p>1.互斥量  采采用互斥对象机制，只有拥有互斥对象的线程才有访问公共资源的权限。因为互斥对象只有一个，所以可以保证公共资源不会被多个线程同时访问。比如 Java 中的 synchronized 关键词和各种 Lock 都是这种机制。</p><p>2.信号量  它允许同一时刻多个线程访问同一资源，但是需要控制同一时刻访问此资源的最大线程数量。、</p><p>3.事件   通过通知操作的方式来保持多线程同步，还可以方便的实现多线程优先级的比较操作。</p><p>进程的调度算法 </p><ul><li>先来先服务</li><li>时间片调度</li><li>短作业优先</li><li>优先级调度</li><li><strong>多级反馈队列调度算法</strong>  </li></ul><h4 id="什么是死锁"><a href="#什么是死锁" class="headerlink" title="什么是死锁"></a>什么是死锁</h4><p>多个进程可以竞争有限数量的资源。当一个进程申请资源时，如果这时没有可用资源，那么这个进程进入等待状态。有时，如果所申请的资源被其他等待进程占有，那么该等待进程有可能再也无法改变状态。这种情况称为 <strong>死锁</strong>。</p><h4 id="死锁产生的四个必要条件"><a href="#死锁产生的四个必要条件" class="headerlink" title="死锁产生的四个必要条件"></a>死锁产生的四个必要条件</h4><ul><li>互斥</li><li>非剥夺</li><li>占有并等待</li><li>循环等待</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;操作系统&quot;&gt;&lt;a href=&quot;#操作系统&quot; class=&quot;headerlink&quot; title=&quot;操作系统&quot;&gt;&lt;/a&gt;操作系统&lt;/h1&gt;&lt;h2 id=&quot;什么是操作系统？&quot;&gt;&lt;a href=&quot;#什么是操作系统？&quot; class=&quot;headerlink&quot; title=&quot;什</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>分享会</title>
    <link href="http://example.com/2022/03/13/%E6%95%99%E8%82%B2%E8%83%8C%E6%99%AF/"/>
    <id>http://example.com/2022/03/13/%E6%95%99%E8%82%B2%E8%83%8C%E6%99%AF/</id>
    <published>2022-03-13T12:12:20.422Z</published>
    <updated>2022-03-14T06:04:03.626Z</updated>
    
    <content type="html"><![CDATA[<h1 id="教育背景"><a href="#教育背景" class="headerlink" title="教育背景"></a>教育背景</h1><p>学校 专业  GPA  top30%</p><h1 id="获奖情况"><a href="#获奖情况" class="headerlink" title="获奖情况"></a>获奖情况</h1><p>数学竞赛</p><p>算法竞赛</p><p>奖学金</p><h1 id="项目经历"><a href="#项目经历" class="headerlink" title="项目经历"></a>项目经历</h1><p>四二法则</p><p>项目背景  负责目标   结果（数据支撑） 解决了什么问题</p><p>提升了…</p><p>增加了…</p><p>优化了…</p><h1 id="实习经历"><a href="#实习经历" class="headerlink" title="实习经历"></a>实习经历</h1><p>公司   岗位</p><p>专业技能  Java   熟悉  掌握 了解</p><p>仅仅知道的不要写</p><h1 id="笔试"><a href="#笔试" class="headerlink" title="笔试"></a>笔试</h1><p>好好写简历     才有笔试机会</p><p>找熟人内推</p><p>计算机基础知识(408)   </p><p>算法题</p><h1 id="面试"><a href="#面试" class="headerlink" title="面试"></a>面试</h1><p>计算机基础知识</p><p>项目经历</p><p>算法题</p><p>无项目  问八股</p><p>八股范围广</p><p>先与面试官交流解法和思路</p><p>剑指Offer</p><p>Hot100</p><p>沟通能力</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;教育背景&quot;&gt;&lt;a href=&quot;#教育背景&quot; class=&quot;headerlink&quot; title=&quot;教育背景&quot;&gt;&lt;/a&gt;教育背景&lt;/h1&gt;&lt;p&gt;学校 专业  GPA  top30%&lt;/p&gt;
&lt;h1 id=&quot;获奖情况&quot;&gt;&lt;a href=&quot;#获奖情况&quot; class=&quot;he</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>计算机网络总结</title>
    <link href="http://example.com/2022/03/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <id>http://example.com/2022/03/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</id>
    <published>2022-03-13T08:41:49.559Z</published>
    <updated>2022-03-14T07:08:19.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2>OSI/IP 七层结构</h2><p>​            从下到上</p><ul><li><p>物理层</p></li><li><p>数据链路层</p></li><li><p>网络层</p></li><li><p>传输层</p></li><li><p>会话层</p></li><li><p>表示层</p></li><li><p>应用层</p></li></ul><p>生动形象的照片理解</p><p><img src="https://s2.loli.net/2022/03/13/TtXnPW231YhvGcN.png"></p><h4>应用层</h4><p> 应用层位于传输层之上，主要提供两个终端设备上的应用程序之间信息交换的服务，它定义了信息交换的格式，消息会交给下一层传输层来传输。我们把应用层交互的数据单元称为报文。</p><p>支持协议  支持Web应用的Http 协议   邮件STMP服务</p><h4>传输层</h4><p>传输层的主要任务就是负责向两台终端设备进程之中的通信提供通用的数据传输服务</p><p><strong>传输控制协议TCP</strong>    是面向连接的  可靠的数据传输服务</p><p><strong>用户数据协议UDP</strong>    是无连接的 尽最大努力的数据传输服(不保证数据传输的可靠性)</p><h4 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h4><p>网络层负责为分组交换网上的不同主机提供通信服务</p><blockquote><p>在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组和包进行传送。在 TCP/IP 体系结构中，由于网络层使用 IP 协议，因此分组也叫 IP 数据报，简称数据报。</p></blockquote><h1 id="HTTP与HTTPS"><a href="#HTTP与HTTPS" class="headerlink" title="HTTP与HTTPS"></a>HTTP与HTTPS</h1><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><p>HTTP协议，全称为超文本传输协议，顾名思义，HTTP 协议就是用来规范超文本的传输，超文本，也就是网络上的包括文本在内的各式各样的消，具体来说，主要是来规范浏览器和服务器端的行为的。</p><p>并且，HTTP是一个无状态协议，也就是说服务器不维护任何有关客户端过去所发请求的消息。这其实是一种懒政，有状态协议会更加复杂，需要维护状态（历史信息），而且如果客户或服务器失效，会产生状态的不一致，解决这种不一致的代价更高。</p><p>HTTP为应用层协议  它以TCP协议为底层协议(传输层)     默认端口80</p><p>通信过程主要如下</p><ul><li>服务器在80端口等待客户的等待</li><li>浏览器发起到服务器的TCP连接(创建套接字Socker )</li><li>服务器接受来自浏览器的TCP连接</li><li>浏览器与服务器交换HTTP消息</li><li>关闭TCP连接</li></ul><p>HTTP协议优点</p><p>扩展性强，速度快，跨平台支持性好</p><h2 id="HTTPS协议"><a href="#HTTPS协议" class="headerlink" title="HTTPS协议"></a>HTTPS协议</h2><p>HTTPS 协议（Hyper Text Transfer Protocol Secure），是 HTTP 的加强安全版本。HTTPS 是基于 HTTP 的，也是用 TCP 作为底层协议，并额外使用 SSL/TLS 协议用作加密和安全认证。默认端口号是 443.</p><blockquote><p>HTTPS 协议中，SSL 通道通常使用基于密钥的加密算法，密钥长度通常是 40 比特或 128 比特。</p></blockquote><p>HTTPS协议优点</p><p>保密性好，信任度高。</p><h5 id="HTTP的核心-–-SSL-TLS协议"><a href="#HTTP的核心-–-SSL-TLS协议" class="headerlink" title="HTTP的核心 – SSL/TLS协议"></a>HTTP的核心 – SSL/TLS协议</h5><p>HTTPS 之所以能达到较高的安全性要求，就是结合了 SSL/TLS 和 TCP 协议，对通信数据进行加密，解决了 HTTP 数据透明的问题。接下来重点介绍一下 SSL/TLS 的工作原理。</p><p>SSL/TLS协议的核心要素<strong>非对称加密算法</strong></p><p>非对称加密采用两个密钥——一个公钥，一个私钥。在通信时，私钥仅由解密者保存，公钥由任何一个想与解密者通信的发送者（加密者）所知。可以设想一个场景，</p><blockquote><p>在某个自助邮局，每个通信信道都是一个邮箱，每一个邮箱所有者都在旁边立了一个牌子，上面挂着一把钥匙：这是我的公钥，发送者请将信件放入我的邮箱，并用公钥锁好。但是公钥只能加锁，并不能解锁。解锁只能由邮箱的所有者——因为只有他保存着私钥。</p><p>这样，通信信息就不会被其他人截获了，这依赖于私钥的保密性。</p></blockquote><h5 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h5><p>使用 SSL/TLS 进行通信的双方需要使用非对称加密方案来通信，但是非对称加密设计了较为复杂的数学算法，在实际通信过程中，计算的代价较高，效率太低，因此，SSL/TLS 实际对消息的加密使用的是对称加密。</p><blockquote><p>对称加密：通信双方共享唯一密钥 k，加解密算法已知，加密方利用密钥 k 加密，解密方利用密钥 k 解密，保密性依赖于密钥 k 的保密性。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机网络&quot;&gt;&lt;a href=&quot;#计算机网络&quot; class=&quot;headerlink&quot; title=&quot;计算机网络&quot;&gt;&lt;/a&gt;计算机网络&lt;/h1&gt;&lt;h2&gt;OSI/IP 七层结构&lt;/h2&gt;

&lt;p&gt;​            从下到上&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;物理</summary>
      
    
    
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Lambda表达式</title>
    <link href="http://example.com/2022/03/12/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2022/03/12/Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2022-03-12T14:57:20.979Z</published>
    <updated>2022-03-13T07:18:49.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Lambda表达式"><a href="#Lambda表达式" class="headerlink" title="Lambda表达式"></a>Lambda表达式</h1><blockquote><p><strong>Lambda 表达式</strong> − Lambda 允许把函数作为一个方法的参数（函数作为参数传递到方法中）。</p></blockquote><p>Lambda 表达式的基础语法：Java8中引入了一个新的操作符表达式，”-&gt;” 该操作符为箭头操作符或Lambda操作符</p><p>左侧：lambda表达式的参数列表</p><p>右侧：lambda表达式中所需执行的功能，即 Lambda体</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><h3 id="1-无参数，无返回值"><a href="#1-无参数，无返回值" class="headerlink" title="1.无参数，无返回值"></a>1.无参数，无返回值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Runnable t = () -&gt; System.out.println(<span class="string">&quot;Hello Lambda&quot;</span>)</span><br><span class="line">t.run();</span><br></pre></td></tr></table></figure><h3 id="2-有参数，无返回值"><a href="#2-有参数，无返回值" class="headerlink" title="2.有参数，无返回值"></a>2.有参数，无返回值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(x)-&gt; System.out.println(x)</span><br></pre></td></tr></table></figure><p>若只有一个参数,小括号可以省略不写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x-&gt; System.out.println(x)</span><br></pre></td></tr></table></figure><h3>3.有两个以上的参数,有返回值,并且 Lambda体中有多条语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Comparator&lt;Integer&gt; com =(x,y)-&gt;(System.out.print1n(<span class="string">&quot;函数式接口&quot;</span>) <span class="keyword">return</span> Integer.compare(x,y)</span><br></pre></td></tr></table></figure><p>…待续</p><h3></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Lambda表达式&quot;&gt;&lt;a href=&quot;#Lambda表达式&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式&quot;&gt;&lt;/a&gt;Lambda表达式&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Lambda 表达式&lt;/strong&gt; −</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>JAVA面向对象</title>
    <link href="http://example.com/2022/03/12/JAVA%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://example.com/2022/03/12/JAVA%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</id>
    <published>2022-03-12T08:36:10.000Z</published>
    <updated>2022-03-13T08:31:21.930Z</updated>
    
    <content type="html"><![CDATA[<p>JAVA面向对象</p><p><strong>面向过程:</strong> 先确定如何操作数据，再决定数据的结构，适用于小规模问题。</p><p><strong>面向对象OOP：</strong>先决定数据的结构，在考虑操作数据的算法，适用于大规模问题。</p><p><strong>this与super关键字</strong></p><p>this关键字</p><ul><li>隐式参数的调用</li><li>调用该类的其他构造器</li></ul><p>super关键字</p><ul><li>调用父类方法</li><li>调用父类构造器</li></ul><p>注意：this可以作为当前对象的引用，但是super却不可以作为父类对象的引用</p><h2 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h2><p>数组+链表</p><p>数组+链表+红黑树</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>1.无序 不可重复</p><p>2.⽆序：因为不⼀定挂在那个单链表上了 </p><p>为什么不可重复 </p><p>通过重写equals方法保证的</p><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><p>Java里面有一个字符串常量池的东西</p><p>创建字符串对象时，如果字符串常量池没有那个字符 则需要先在字符串常量池里面创建，再创建字符串对象</p><p>如果已存在于字符串常量池，则只需要创建字符串对象</p><h4 id="为什么把字符串存储在⼀个“字符串常量池”当中呢？"><a href="#为什么把字符串存储在⼀个“字符串常量池”当中呢？" class="headerlink" title="为什么把字符串存储在⼀个“字符串常量池”当中呢？"></a>为什么把字符串存储在⼀个“字符串常量池”当中呢？</h4><ol><li><p>因为字符串在实际的开发中使⽤太频繁。 </p></li><li><p>为了提⾼执⾏效率，所以把字符串放到了⽅法区的“字符串常量池”当中。 </p></li></ol><h2 id="String、-StringBuilder、-StringBuffer解析"><a href="#String、-StringBuilder、-StringBuffer解析" class="headerlink" title="String、 StringBuilder、 StringBuffer解析"></a>String、 StringBuilder、 StringBuffer解析</h2><p>String 底层数组用final修饰，不可变。</p><p>StringBuilder 底层数组没有用final修饰，可变；线程不安全，效率高</p><p>StringBuffer 底层数组没有用final修饰，可变；线程安全 效率地</p><p>⽅法都采⽤ 了 synchronized 修饰 </p><h3>== 与 equals</h3><p>对于基本数据类型来说  == 比较的是值</p><p>对于引用数据类型来说  ==比较的是对象的内存地址</p><p><strong><code>equals()</code></strong> 不能用于判断基本数据类型的变量，只能用来判断两个对象是否相等。<code>equals()</code>方法存在于<code>Object</code>类中，而<code>Object</code>类是所有类的直接或间接父类，因此所有的类都有<code>equals()</code>方法。 </p><p>String类中的equals方法是重写过的 因为Object的equals类方法是比较的对象的内存地址 <strong>而String类中的equals方法比较的是对象的值</strong></p><p>当创建 <code>String</code> 类型的对象时，虚拟机会在常量池中查找有没有已经存在的值和要创建的值相同的对象，如果有就把它赋给当前引用。如果没有就在常量池中重新创建一个 <code>String</code> 对象</p><p><code>String</code>类<code>equals()</code>方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">equals</span><span class="params">(Object anObject)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span> == anObject) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (anObject <span class="keyword">instanceof</span> String) &#123;</span><br><span class="line">        String anotherString = (String)anObject;</span><br><span class="line">        <span class="keyword">int</span> n = value.length;</span><br><span class="line">        <span class="keyword">if</span> (n == anotherString.value.length) &#123;</span><br><span class="line">            <span class="keyword">char</span> v1[] = value;</span><br><span class="line">            <span class="keyword">char</span> v2[] = anotherString.value;</span><br><span class="line">            <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (n-- != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (v1[i] != v2[i])</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3>HashCode() 与 equals()</h3><p>HashCode()的作用：</p><blockquote><p>HashCode()的作用是获取哈希码（int函数） 也称之为散列码，这个哈希码的作用是为了确认在哈希表中的索引位置。</p><p><code>hashCode()</code>定义在 JDK 的 <code>Object</code> 类中，这就意味着 Java 中的任何类都包含有 <code>hashCode()</code> 函数。另外需要注意的是： <code>Object</code> 的 <code>hashCode()</code> 方法是本地方法，也就是用 C 语言或 C++ 实现的，该方法通常用来将对象的内存地址转换为整数之后返回。</p></blockquote><p>散列表存储的是键值对(key-value)，它的特点是：<strong>能根据“键”快速的检索出对应的“值”。这其中就利用到了散列码！（可以快速找到所需要的对象）</strong></p><h3>面向对象三大特征</h3><p>封装，继承，多态</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;JAVA面向对象&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面向过程:&lt;/strong&gt; 先确定如何操作数据，再决定数据的结构，适用于小规模问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;面向对象OOP：&lt;/strong&gt;先决定数据的结构，在考虑操作数据的算法，适用于大规模问题。&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>反射</title>
    <link href="http://example.com/2022/02/22/%E5%8F%8D%E5%B0%84/"/>
    <id>http://example.com/2022/02/22/%E5%8F%8D%E5%B0%84/</id>
    <published>2022-02-22T05:47:36.000Z</published>
    <updated>2022-02-22T05:48:10.132Z</updated>
    
    <content type="html"><![CDATA[<h2 id="七、反射"><a href="#七、反射" class="headerlink" title="七、反射"></a>七、反射</h2><p>每个类都有一个 <strong>Class</strong> 对象，包含了与类有关的信息。当编译一个新类时，会产生一个同名的 .class 文件，该文件内容保存着 Class 对象。</p><p>类加载相当于 Class 对象的加载，类在第一次使用时才动态加载到 JVM 中。也可以使用 <code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;)</code> 这种方式来控制类的加载，该方法会返回一个 Class 对象。</p><p>反射可以提供运行时的类信息，并且这个类可以在运行时才加载进来，甚至在编译时期该类的 .class 不存在也可以加载进来。</p><p>Class 和 java.lang.reflect 一起对反射提供了支持，java.lang.reflect 类库主要包含了以下三个类：</p><ul><li><strong>Field</strong> ：可以使用 get() 和 set() 方法读取和修改 Field 对象关联的字段；</li><li><strong>Method</strong> ：可以使用 invoke() 方法调用与 Method 对象关联的方法；</li><li><strong>Constructor</strong> ：可以用 Constructor 的 newInstance() 创建新的对象。</li></ul><p><strong>反射的优点：</strong></p><ul><li><strong>可扩展性</strong> ：应用程序可以利用全限定名创建可扩展对象的实例，来使用来自外部的用户自定义类。</li><li><strong>类浏览器和可视化开发环境</strong> ：一个类浏览器需要可以枚举类的成员。可视化开发环境（如 IDE）可以从利用反射中可用的类型信息中受益，以帮助程序员编写正确的代码。</li><li><strong>调试器和测试工具</strong> ： 调试器需要能够检查一个类里的私有成员。测试工具可以利用反射来自动地调用类里定义的可被发现的 API 定义，以确保一组测试中有较高的代码覆盖率。</li></ul><p><strong>反射的缺点：</strong></p><p>尽管反射非常强大，但也不能滥用。如果一个功能可以不用反射完成，那么最好就不用。在我们使用反射技术时，下面几条内容应该牢记于心。</p><ul><li><strong>性能开销</strong> ：反射涉及了动态类型的解析，所以 JVM 无法对这些代码进行优化。因此，反射操作的效率要比那些非反射操作低得多。我们应该避免在经常被执行的代码或对性能要求很高的程序中使用反射。</li><li><strong>安全限制</strong> ：使用反射技术要求程序必须在一个没有安全限制的环境中运行。如果一个程序必须在有安全限制的环境中运行，如 Applet，那么这就是个问题了。</li><li><strong>内部暴露</strong> ：由于反射允许代码执行一些在正常情况下不被允许的操作（比如访问私有的属性和方法），所以使用反射可能会导致意料之外的副作用，这可能导致代码功能失调并破坏可移植性。反射代码破坏了抽象性，因此当平台发生改变的时候，代码的行为就有可能也随着变化。</li><li>源于 <a href="https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20%E5%9F%BA%E7%A1%80.md#clone">https://github.com/CyC2018/CS-Notes/blob/master/notes/Java%20%E5%9F%BA%E7%A1%80.md#clone</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;七、反射&quot;&gt;&lt;a href=&quot;#七、反射&quot; class=&quot;headerlink&quot; title=&quot;七、反射&quot;&gt;&lt;/a&gt;七、反射&lt;/h2&gt;&lt;p&gt;每个类都有一个 &lt;strong&gt;Class&lt;/strong&gt; 对象，包含了与类有关的信息。当编译一个新类时，会产生一个同名的</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>新年总结以及未来展望</title>
    <link href="http://example.com/2022/02/22/%E6%96%B0%E5%B9%B4%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B/"/>
    <id>http://example.com/2022/02/22/%E6%96%B0%E5%B9%B4%E6%80%BB%E7%BB%93%E4%BB%A5%E5%8F%8A%E6%9C%AA%E6%9D%A5%E5%B1%95%E6%9C%9B/</id>
    <published>2022-02-22T04:55:36.000Z</published>
    <updated>2022-02-22T05:15:21.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h1><p>我是一个从湖南省西南地区的一个小山村里走出来的孩子</p><h2 id="高中"><a href="#高中" class="headerlink" title="高中"></a>高中</h2><p>就读于本县的一所比较好的高中，这所高中95%的同学都来自于农村，其中的学习氛围与志同道合的人不在少数，其中很多同学都聊得来，在那里与他们可以用方言直接交流。进校时自己是一个平平无奇的同学，后面高三厚积薄发名列班级第一或许是自己这辈子以来，很骄傲的一个事把。后面出成绩之后，其实 成绩并不是很理想，但是也算正常发挥。后面选择了湖南工业大学的计算机类专业。在高三之前，自己其实的想法是读这个师范专业，不要钱包分配的最好，这是长辈们根深蒂固对我思想的印象，后面我初中差点去读了师范中专。还好，我爸力排众议，让我先读高中，然后高中读完再去读师范，从这点看出，我爸其实想的更远一些，填志愿的时候，也是我一手操办，后面我选了计算机专业，我爸还时不时的唠叨，让我出去找个老师的工作，逃不出安稳两个字。</p><h2 id="大学"><a href="#大学" class="headerlink" title="大学"></a>大学</h2><p>大一是个大类专业 上学期高数学的很严重，作业也完成不错，可是大一下学期疫情来临，在家里自我懈怠。作业只管抄。过的浑浑噩噩。后面专业分流 成绩排名 200/700 自己跟着大部队选了课比较少的软件工程。</p><p>大二也是我一个人生的改变点吧。自己性格是个很热心肠的人，后面上台竞选了班长。但这也给我自己带来了许多的麻烦。比如很多事都尽心尽力，很多小事同学们都会来找我，只是自己为了对得起<strong>为大家服务</strong>这五个字，经常心力憔悴。与辅导员的交流过程大都是搪塞过去的，与辅导员和学生会的认识过程中，自己遇见了一些不能接受的时期，无法与他们同流合污，以及交流，后面我已经不想和她们进行交流，只想尽快卸任。</p><p>大三上学期终于卸任掉了自己的班长，也解放了天性似乎，想逃课就逃课，想干嘛就干嘛，这是一个很快乐的学期，但是因为自己面临着找工作与考研的选择而倍感焦虑。时长因为自己大一大二的贪玩感到后悔，只是后悔有什么用，后悔就能真正的回到过去吗，只是在浪费时间更加的后悔不已。</p><p>原本自己寒假立了个flag好好学习，也因为家里环境不好以及无休止的拜年胎死腹中。 此时此刻无比焦虑写下来可能比较好。希望自己能够找到一份比较满意的实习</p><p>…….待续</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自我介绍&quot;&gt;&lt;a href=&quot;#自我介绍&quot; class=&quot;headerlink&quot; title=&quot;自我介绍&quot;&gt;&lt;/a&gt;自我介绍&lt;/h1&gt;&lt;p&gt;我是一个从湖南省西南地区的一个小山村里走出来的孩子&lt;/p&gt;
&lt;h2 id=&quot;高中&quot;&gt;&lt;a href=&quot;#高中&quot; class=</summary>
      
    
    
    
    
    <category term="自我介绍" scheme="http://example.com/tags/%E8%87%AA%E6%88%91%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>爬取强智科技教务系统—以湖南工业大学为例</title>
    <link href="http://example.com/2022/01/11/%E7%88%AC%E5%8F%96%E5%BC%BA%E5%88%B6%E7%A7%91%E6%8A%80%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E2%80%94%E4%BB%A5%E6%B9%96%E5%8D%97%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E4%B8%BA%E4%BE%8B/"/>
    <id>http://example.com/2022/01/11/%E7%88%AC%E5%8F%96%E5%BC%BA%E5%88%B6%E7%A7%91%E6%8A%80%E6%95%99%E5%8A%A1%E7%B3%BB%E7%BB%9F%E2%80%94%E4%BB%A5%E6%B9%96%E5%8D%97%E5%B7%A5%E4%B8%9A%E5%A4%A7%E5%AD%A6%E4%B8%BA%E4%BE%8B/</id>
    <published>2022-01-11T06:57:26.000Z</published>
    <updated>2022-01-11T07:38:43.812Z</updated>
    
    <content type="html"><![CDATA[<p> 写这个已经过了很久的的时间了  当时写好没写博客是因为怕这个有额外的问题，现在经过实验 表现的都还没不错 在10min内成绩提醒就会发送到你自己指定的邮箱 我会把代码开源放入Github,当然我也会隐去我自己的信息。</p><p>这篇博客也会教大家怎么使用他</p><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>IDEA+springboot框架+Maven+jsoup+httpclient</p><p>首先去教务系统网页  新的教务系统有验证码验证 ，但是还好我以前收藏了一个不用验证码的网站</p><p>湖南工业大学教务系统网站 ：<a href="http://218.75.197.123:83/jsxsd/![](https://s2.loli.net/2022/01/11/jQWEIPiNM3oJd1h.png)">http://218.75.197.123:83/jsxsd/![](https://s2.loli.net/2022/01/11/jQWEIPiNM3oJd1h.png)</a></p><p>按F12 然后找到network（网络这一项） 登陆系统</p><p><img src="https://s2.loli.net/2022/01/11/srBjHaApIo8iDyV.png"></p><p>找到这一项 点开 <img src="https://s2.loli.net/2022/01/11/IBreibC61mT3AWM.png"></p><p>记录下这个的信息  userAccount即是学号  encodedd是学号+密码的base64加密</p><p>maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>JWXT<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>JWXT<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>JWXT<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.10.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-mail --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Lang3工具类--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 发送邮件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.mail<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mail<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--HttpClient--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.5.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.httpcomponents<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>httpclient<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--阿里巴巴 json--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.51<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.hutool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hutool-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在IDEA新建Springboot框架 然后在新建类LoginPZ</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.NameValuePair;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.entity.UrlEncodedFormEntity;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpPost;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.protocol.HttpClientContext;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.cookie.Cookie;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.message.BasicNameValuePair;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URI;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginPz</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">hello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Map&lt;String,String&gt; param = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        String userAccount = <span class="string">&quot;你的学号&quot;</span>;</span><br><span class="line">        String userPassword = <span class="string">&quot;密码&quot;</span>;</span><br><span class="line">        String encoded = <span class="string">&quot;上文提到的加密信息&quot;</span>;<span class="comment">//加密信息</span></span><br><span class="line">        param.put(<span class="string">&quot;userAccount&quot;</span>,userAccount);</span><br><span class="line">        param.put(<span class="string">&quot;userPassword&quot;</span>,userPassword);</span><br><span class="line">        param.put(<span class="string">&quot;encoded&quot;</span>,encoded);</span><br><span class="line">        List&lt;URI&gt; redirectLocations = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 创建Httpclient对象</span></span><br><span class="line">        CloseableHttpClient httpClient = HttpClients.createDefault();</span><br><span class="line">        CloseableHttpResponse response = <span class="keyword">null</span>;</span><br><span class="line">        String resultString = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建Http Post请求</span></span><br><span class="line">            HttpPost httpPost = <span class="keyword">new</span> HttpPost(<span class="string">&quot;http://218.75.197.123:83/jsxsd/xk/LoginToXk&quot;</span>);</span><br><span class="line">            <span class="comment">//请求头</span></span><br><span class="line">            httpPost.addHeader(<span class="string">&quot;Content-Type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">            httpPost.addHeader(<span class="string">&quot;Cookie&quot;</span>,<span class="string">&quot;JSESSIONID=22B4C4CE6240C6C53FF6BC3C197E3B83; SERVERID=121; JSESSIONID=8FFFAEA49DC840CE5A3135330C06CED3&quot;</span>);</span><br><span class="line">            <span class="comment">// 创建参数列表</span></span><br><span class="line">            <span class="keyword">if</span> (param != <span class="keyword">null</span>) &#123;</span><br><span class="line">                List&lt;NameValuePair&gt; paramList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                <span class="keyword">for</span> (String key : param.keySet()) &#123;</span><br><span class="line">                    paramList.add(<span class="keyword">new</span> BasicNameValuePair(key, param.get(key)));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 模拟表单登录</span></span><br><span class="line">                UrlEncodedFormEntity entity = <span class="keyword">new</span> UrlEncodedFormEntity(paramList);</span><br><span class="line">                httpPost.setEntity(entity);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 执行http请求</span></span><br><span class="line">            HttpClientContext context = HttpClientContext.create();</span><br><span class="line">            response = httpClient.execute(httpPost,context);</span><br><span class="line">            <span class="comment">//获取Cookie信息,得到两个参数 JSESSIONID 、 Serverid</span></span><br><span class="line">            List&lt;Cookie&gt; cookies = context.getCookieStore().getCookies();</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                String value = cookie.getValue();</span><br><span class="line"><span class="comment">//                System.out.println(&quot;name:&quot;+name+&quot;,&quot;+value);</span></span><br><span class="line">                <span class="keyword">return</span> value;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                response.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是模拟教务系统登陆  然后我们新建类GetUserInfo</p><p>代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.CloseableHttpResponse;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.client.methods.HttpGet;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.CloseableHttpClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.impl.client.HttpClients;</span><br><span class="line"><span class="keyword">import</span> org.apache.http.util.EntityUtils;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Document;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.nodes.Element;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.select.Elements;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Timer;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录后获取用户信息</span></span><br><span class="line"><span class="comment"> * 相关解析HTMl的操作不是固定的</span></span><br><span class="line"><span class="comment"> * 需要结合自己的需求来操作</span></span><br><span class="line"><span class="comment"> * 此处仅作为演示。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GetUserInfo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">cj</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000000000</span>; ) &#123;</span><br><span class="line">            LoginPz loginPz = <span class="keyword">new</span> LoginPz();</span><br><span class="line">            String cookies = loginPz.hello();</span><br><span class="line">            CloseableHttpClient httpClient = HttpClients.createDefault();</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                HttpGet httpGet = <span class="keyword">new</span> HttpGet(<span class="string">&quot;http://218.75.197.123:83/jsxsd/kscj/cjcx_list?kksj=2021-2022-1&quot;</span>);<span class="comment">//2021-2022-1为学期信息 可自行更改</span></span><br><span class="line">                <span class="comment">//增加头信息</span></span><br><span class="line">                <span class="comment">//注意此处需要修改为正确的JSESSIONID 和 SERVERID</span></span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;Cookie&quot;</span>, <span class="string">&quot;JSESSIONID&quot;</span> + <span class="string">&quot;=&quot;</span> + cookies + <span class="string">&quot;; SERVERID=121; JSESSIONID=8FFFAEA49DC840CE5A3135330C06CED3&quot;</span>);</span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;User-Agent&quot;</span>, <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36&quot;</span>);</span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;Accept&quot;</span>, <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&quot;</span>);</span><br><span class="line">                httpGet.addHeader(<span class="string">&quot;Connection&quot;</span>, <span class="string">&quot;keep-alive&quot;</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//执行</span></span><br><span class="line">                CloseableHttpResponse response = httpClient.execute(httpGet);</span><br><span class="line">                String html = EntityUtils.toString(response.getEntity(), <span class="string">&quot;utf8&quot;</span>);</span><br><span class="line">                Document parse = Jsoup.parse(html);</span><br><span class="line">                parseHtml(parse);</span><br><span class="line">                Thread thread = <span class="keyword">new</span> Thread();</span><br><span class="line">                thread.sleep(<span class="number">600000</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">parseHtml</span><span class="params">(Document parse)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">//        int idx = 2;//目前已出成绩科目</span></span><br><span class="line">        <span class="comment">//选择table</span></span><br><span class="line">        Element table = parse.getElementById(<span class="string">&quot;dataList&quot;</span>);</span><br><span class="line">        <span class="comment">//选择tr</span></span><br><span class="line">        Elements cells = table.select(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line"></span><br><span class="line">        StringBuilder stringBuilder = <span class="keyword">new</span> StringBuilder(); <span class="comment">//用来存储成绩信息</span></span><br><span class="line">        <span class="comment">//自己存储的每一行数据</span></span><br><span class="line">        List&lt;List&lt;String&gt;&gt; tables = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">1</span>; index &lt; cells.size(); index++) &#123;</span><br><span class="line">            <span class="comment">//第一行是表头 index = 0 跳过</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//第二行开始table数据</span></span><br><span class="line"></span><br><span class="line">            Element row = cells.get(index);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//搜索tr下的所有的td</span></span><br><span class="line">            Elements rows = row.select(<span class="string">&quot;td&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//每一行的数据</span></span><br><span class="line">            List&lt;String&gt; dataList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (Element element : rows) &#123;</span><br><span class="line">                dataList.add(element.text());</span><br><span class="line">            &#125;</span><br><span class="line">            tables.add(dataList);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取表头</span></span><br><span class="line">        Elements headers = cells.get(<span class="number">0</span>).select(<span class="string">&quot;th&quot;</span>);</span><br><span class="line">        List&lt;String&gt; tableHeader = headers.stream()</span><br><span class="line">                .map(Element::text)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印数据</span></span><br><span class="line">        <span class="keyword">for</span> (String str : tableHeader) &#123;</span><br><span class="line">            System.out.printf(str + <span class="string">&quot;    &quot;</span>);</span><br><span class="line">            stringBuilder.append(str + <span class="string">&quot;      &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        stringBuilder.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (List&lt;String&gt; strs : tables) &#123;</span><br><span class="line">            <span class="keyword">for</span> (String str : strs) &#123;</span><br><span class="line">                System.out.printf(str + <span class="string">&quot;        &quot;</span>);</span><br><span class="line">                stringBuilder.append(str + <span class="string">&quot;         &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            stringBuilder.append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line"><span class="comment">//        System.out.println(tables.size());</span></span><br><span class="line">        <span class="keyword">if</span> (tables.size() &gt; idx)<span class="comment">//idx 为原先的成绩数量123</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//发送邮件给自己</span></span><br><span class="line">            System.out.println(<span class="string">&quot;这是一个标志&quot;</span>);</span><br><span class="line">            SendMailUtil.sendEmail(<span class="string">&quot;你的邮箱 xxxx@qq.com&quot;</span>, <span class="string">&quot;成绩更新&quot;</span>, stringBuilder.toString());</span><br><span class="line">            idx = tables.size();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新建发邮件的类SendMailUtil<br>邮箱建议使用qq邮箱  需要拿到授权码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.Address;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.mail.util.MailSSLSocketFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SendMailUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//邮件服务器主机名</span></span><br><span class="line">    <span class="comment">// QQ邮箱的 SMTP 服务器地址为: smtp.qq.com</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String myEmailSMTPHost = <span class="string">&quot;smtp.qq.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发件人邮箱</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String myEmailAccount = <span class="string">&quot;xx@qq.com&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//发件人邮箱密码（授权码）</span></span><br><span class="line">    <span class="comment">//在开启SMTP服务时会获取到一个授权码，把授权码填在这里</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String myEmailPassword = <span class="string">&quot;授权码  需要自己去qq邮箱拿&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 邮件单发（自由编辑短信，并发送，适用于私信）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> toEmailAddress 收件箱地址</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> emailTitle 邮件主题</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> emailContent 邮件内容</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendEmail</span><span class="params">(String toEmailAddress, String emailTitle, String emailContent)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 开启debug调试</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.debug&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送服务器需要身份验证</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.auth&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 端口号</span></span><br><span class="line">        props.put(<span class="string">&quot;mail.smtp.port&quot;</span>, <span class="number">465</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置邮件服务器主机名</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.smtp.host&quot;</span>, myEmailSMTPHost);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送邮件协议名称</span></span><br><span class="line">        props.setProperty(<span class="string">&quot;mail.transport.protocol&quot;</span>, <span class="string">&quot;smtp&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**SSL认证，注意腾讯邮箱是基于SSL加密的，所以需要开启才可以使用**/</span></span><br><span class="line">        MailSSLSocketFactory sf = <span class="keyword">new</span> MailSSLSocketFactory();</span><br><span class="line">        sf.setTrustAllHosts(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置是否使用ssl安全连接（一般都使用）</span></span><br><span class="line">        props.put(<span class="string">&quot;mail.smtp.ssl.enable&quot;</span>, <span class="string">&quot;true&quot;</span>);</span><br><span class="line">        props.put(<span class="string">&quot;mail.smtp.ssl.socketFactory&quot;</span>, sf);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建会话</span></span><br><span class="line">        Session session = Session.getInstance(props);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取邮件对象</span></span><br><span class="line">        <span class="comment">//发送的消息，基于观察者模式进行设计的</span></span><br><span class="line">        Message msg = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置邮件标题</span></span><br><span class="line">        msg.setSubject(emailTitle);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置邮件内容</span></span><br><span class="line">        <span class="comment">//使用StringBuilder，因为StringBuilder加载速度会比String快，而且线程安全性也不错</span></span><br><span class="line">        StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写入内容</span></span><br><span class="line">        builder.append(<span class="string">&quot;\n&quot;</span> + emailContent);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置显示的发件时间</span></span><br><span class="line">        msg.setSentDate(<span class="keyword">new</span> Date());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置邮件内容</span></span><br><span class="line">        msg.setText(builder.toString());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//设置发件人邮箱</span></span><br><span class="line">        <span class="comment">// InternetAddress 的三个参数分别为: 发件人邮箱, 显示的昵称(只用于显示, 没有特别的要求), 昵称的字符集编码</span></span><br><span class="line">        msg.setFrom(<span class="keyword">new</span> InternetAddress(myEmailAccount,<span class="string">&quot;我的工作站&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//得到邮差对象</span></span><br><span class="line">        Transport transport = session.getTransport();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接自己的邮箱账户</span></span><br><span class="line">        <span class="comment">//密码不是自己QQ邮箱的密码，而是在开启SMTP服务时所获取到的授权码</span></span><br><span class="line">        <span class="comment">//connect(host, user, password)</span></span><br><span class="line">        transport.connect( myEmailSMTPHost, myEmailAccount, myEmailPassword);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//发送邮件</span></span><br><span class="line">        transport.sendMessage(msg, <span class="keyword">new</span> Address[] &#123; <span class="keyword">new</span> InternetAddress(toEmailAddress) &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将该邮件保存到本地</span></span><br><span class="line">        OutputStream out = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;MyEmail.eml&quot;</span>);</span><br><span class="line">        msg.writeTo(out);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line"></span><br><span class="line">        transport.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>拿授权码过程</p><p><img src="https://s2.loli.net/2022/01/11/dcGYlLwV7R2QSO6.png"></p><p><img src="https://s2.loli.net/2022/01/11/FeGv29CXQPByhwr.png"></p><p>拿到授权码之后复制到上面去</p><p>再到Application添加启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.jwxt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span>  <span class="title">JwxtApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SpringApplication.run(JwxtApplication.class, args);</span><br><span class="line">        GetUserInfo getUserInfo = <span class="keyword">new</span> GetUserInfo();</span><br><span class="line">        getUserInfo.cj();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果自己有服务器就把这个项目打包成jar包上跑起来</p><p>没有的话只能把项目一直跑着不关</p><p>打jar包</p><p><img src="https://s2.loli.net/2022/01/11/Np9EQ26qcyemUTx.png"></p><p><img src="C:\Users\peng\AppData\Roaming\Typora\typora-user-images\image-20220111152346322.png" alt="image-20220111152346322"></p><p>用xshell+xftp把文件传入服务器上</p><p><img src="https://s2.loli.net/2022/01/11/N8nC7XRiZzOkfgt.png"></p><p>然后用xshell 一直cd到jar包所在的路径</p><p><img src="https://s2.loli.net/2022/01/11/NjL9gcGkawufxbv.png"></p><p>使用命令 </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar JWXT-0.0.1-SNAPSHOT.jar 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>然后就大功告成了  一般你跑起来之后就会收到一封邮件提醒</p><p>github的项目地址 <a href="https://github.com/fengxiaop/JWXT">https://github.com/fengxiaop/JWXT</a></p><p> 如果有用的话请你动动你的小手点点star  因为这无疑是对我巨大的鼓励。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 写这个已经过了很久的的时间了  当时写好没写博客是因为怕这个有额外的问题，现在经过实验 表现的都还没不错 在10min内成绩提醒就会发送到你自己指定的邮箱 我会把代码开源放入Github,当然我也会隐去我自己的信息。&lt;/p&gt;
&lt;p&gt;这篇博客也会教大家怎么使用他&lt;/p&gt;
&lt;</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>年终总结</title>
    <link href="http://example.com/2022/01/01/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2022/01/01/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2022-01-01T15:40:37.000Z</published>
    <updated>2022-01-01T15:45:57.239Z</updated>
    
    <content type="html"><![CDATA[<p>  送走了迷茫的2021年 迎来了可能最为艰难的2022年  上学期突然下定决心决定工作，这学期开学到现在陆陆续续的刷了150道力扣  其实很多都是水题。不过像我这样努力了一个月也去拿了个程序设计二等奖。也明白了我现在一直坚持的一句话，</p><p><strong>任何时候努力都不算晚</strong></p><p><img src="https://s2.loli.net/2022/01/01/fbXKBq5ujagpmzk.png"></p><p>也许愿一下自己来年的愿望吧 希望自己能够春招实习能够找到一份好的实习，秋招能够找到自己满意的工作。去想去的上海，弥补高考的遗憾。</p><p>也给来年一些期许吧</p><p>1.力扣打卡 每月满勤</p><p>2.数据结构全部再过一遍</p><p>3.学好八股！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;  送走了迷茫的2021年 迎来了可能最为艰难的2022年  上学期突然下定决心决定工作，这学期开学到现在陆陆续续的刷了150道力扣  其实很多都是水题。不过像我这样努力了一个月也去拿了个程序设计二等奖。也明白了我现在一直坚持的一句话，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;任何时</summary>
      
    
    
    
    
    <category term="碎碎念" scheme="http://example.com/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
  </entry>
  
  <entry>
    <title>完美数</title>
    <link href="http://example.com/2021/12/31/%E5%AE%8C%E7%BE%8E%E6%95%B0/"/>
    <id>http://example.com/2021/12/31/%E5%AE%8C%E7%BE%8E%E6%95%B0/</id>
    <published>2021-12-31T08:19:57.000Z</published>
    <updated>2021-12-31T08:27:01.658Z</updated>
    
    <content type="html"><![CDATA[<p>​    <a href="https://leetcode-cn.com/problems/perfect-number/">507. 完美数</a></p><p>两种方法</p><p>方法一 打表  </p><p><img src="https://s2.loli.net/2021/12/31/tD6SVr2EosC3KBj.png"></p><p>我试了一下我的打表方式 20分钟还没打出最后一个数  </p><p>直接搬官方的吧</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPerfectNumber</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> num == <span class="number">6</span> || num == <span class="number">28</span> || num == <span class="number">496</span> || num == <span class="number">8128</span> || num == <span class="number">33550336</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 方法二  枚举</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPerfectNumber</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(num==<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i &lt;= num/<span class="number">2</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(num%i==<span class="number">0</span>)</span><br><span class="line">        sum+=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum==num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个稍微时间稍微长了一点</p><p>​    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPerfectNumber</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= num / i; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (num % i == <span class="number">0</span>) &#123;</span><br><span class="line">                ans += i;</span><br><span class="line">                <span class="keyword">if</span> (i * i != num) ans += num / i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans == num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个就很快了 </p><p>同样是枚举 别人写的和我写的 感觉自己在时间复杂度方法还得加强</p><p><img src="https://s2.loli.net/2021/12/31/fKldBcVxSY9JAo1.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​    &lt;a href=&quot;https://leetcode-cn.com/problems/perfect-number/&quot;&gt;507. 完美数&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;两种方法&lt;/p&gt;
&lt;p&gt;方法一 打表  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://s2.loli</summary>
      
    
    
    
    
    <category term="leetcode 507 完美数" scheme="http://example.com/tags/leetcode-507-%E5%AE%8C%E7%BE%8E%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>解决springboot端口被占用问题</title>
    <link href="http://example.com/2021/12/09/%E8%A7%A3%E5%86%B3springboot%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2021/12/09/%E8%A7%A3%E5%86%B3springboot%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E9%97%AE%E9%A2%98/</id>
    <published>2021-12-09T10:10:11.000Z</published>
    <updated>2021-12-09T10:14:42.080Z</updated>
    
    <content type="html"><![CDATA[<p>#Springboot端口被占用</p><p>打开cmd</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#Springboot端口被占用&lt;/p&gt;
&lt;p&gt;打开cmd&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>b树,红黑树，B+树</title>
    <link href="http://example.com/2021/12/06/b%E6%A0%91/"/>
    <id>http://example.com/2021/12/06/b%E6%A0%91/</id>
    <published>2021-12-06T04:52:15.000Z</published>
    <updated>2021-12-06T04:55:29.818Z</updated>
    
    <content type="html"><![CDATA[<p>红黑树其实就是平衡树的一种，复杂的定义和规则，最后都是为了保证树的平衡性。</p><p>​    因为树的查找性能取决于树的高度，让树尽可能平衡，就是为了降低树的高度。</p><p>B树常用在文件系统的索引上，那为什么文件索引喜欢用B树而不是红黑树呢？</p><p>因为文件系统和数据库的索引都是存在硬盘上的，并且如果数据量大的话，不一定能一次性加载到内存。</p><p>所以一棵树都无法一次性加载进内存，又如何谈查找。所以B树的多路存储能力就出来了，可以每次加载B树的一个节点，然后一步步往下找。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;红黑树其实就是平衡树的一种，复杂的定义和规则，最后都是为了保证树的平衡性。&lt;/p&gt;
&lt;p&gt;​    因为树的查找性能取决于树的高度，让树尽可能平衡，就是为了降低树的高度。&lt;/p&gt;
&lt;p&gt;B树常用在文件系统的索引上，那为什么文件索引喜欢用B树而不是红黑树呢？&lt;/p&gt;
&lt;p&gt;因</summary>
      
    
    
    
    
    <category term="数据库" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>快速幂</title>
    <link href="http://example.com/2021/12/05/%E5%BF%AB%E9%80%9F%E5%B9%82/"/>
    <id>http://example.com/2021/12/05/%E5%BF%AB%E9%80%9F%E5%B9%82/</id>
    <published>2021-12-05T11:13:40.000Z</published>
    <updated>2021-12-05T11:25:16.047Z</updated>
    
    <content type="html"><![CDATA[<p>快速幂</p><h4 id="50-Pow-x-n"><a href="#50-Pow-x-n" class="headerlink" title="50. Pow(x, n)"></a><a href="https://leetcode-cn.com/problems/powx-n/">50. Pow(x, n)</a></h4><p>难度中等8 </p><p>实现 <a href="https://www.cplusplus.com/reference/valarray/pow/">pow(<em>x</em>, <em>n</em>)</a> ，即计算 x 的 n 次幂函数（即，xn）。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 2.00000, n = 10</span><br><span class="line">输出：1024.00000</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 2.10000, n = 3</span><br><span class="line">输出：9.26100</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：x = 2.00000, n = -2</span><br><span class="line">输出：0.25000</span><br><span class="line">解释：2-2 = 1/22 = 1/4 = 0.25</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>-100.0 &lt; x &lt; 100.0</code></li><li><code>-231 &lt;= n &lt;= 231-1</code></li><li><code>-104 &lt;= xn &lt;= 104</code></li></ul><p>如果要计算2 的 1024 次方  我们用朴素算法要乘以1024次 算法复杂法O（1024） O（10）</p><p>如果每次都平方一下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1-&gt;2-&gt;4-&gt;8-&gt;16-&gt;32-&gt;64-&gt;128-&gt;256-&gt;512-&gt;1024 </span><br></pre></td></tr></table></figure><p>时间复杂的为O（log 1024）也就是10</p><p><img src="https://s2.loli.net/2021/12/05/LwoEReQn2zqDHuJ.png"></p><p>算法板子</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">myPow</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> N = n;</span><br><span class="line">        <span class="keyword">return</span> N &gt;= <span class="number">0</span> ? quickMul(x, N) : <span class="number">1.0</span> / quickMul(x, -N);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">quickMul</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">long</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> y = quickMul(x, N / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">return</span> N % <span class="number">2</span> == <span class="number">0</span> ? y * y : y * y * x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">myPow</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> N = n;</span><br><span class="line">       <span class="keyword">double</span> ans = quickMul(x,N);</span><br><span class="line">        <span class="keyword">if</span>(N&gt;=<span class="number">0</span>) <span class="keyword">return</span> ans;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1.0</span>/ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">quickMul</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">long</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (N == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> y = quickMul(x, N / <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(N%<span class="number">2</span>==<span class="number">0</span>) <span class="keyword">return</span> y*y;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> y*y*x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>进阶</p><h4 id="372-超级次方"><a href="#372-超级次方" class="headerlink" title="372. 超级次方"></a><a href="https://leetcode-cn.com/problems/super-pow/">372. 超级次方</a></h4><p>难度 中等</p><p>你的任务是计算 <code>ab</code> 对 <code>1337</code> 取模，<code>a</code> 是一个正整数，<code>b</code> 是一个非常大的正整数且会以数组形式给出。</p><p><strong>示例 1：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 2, b = [3]</span><br><span class="line">输出：8</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 2, b = [1,0]</span><br><span class="line">输出：1024</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 1, b = [4,3,3,8,5,2]</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure><p><strong>示例 4：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：a = 2147483647, b = [2,0,0]</span><br><span class="line">输出：1198</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= a &lt;= 231 - 1</code></li><li><code>1 &lt;= b.length &lt;= 2000</code></li><li><code>0 &lt;= b[i] &lt;= 9</code></li><li><code>b</code> 不含前导 0</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MOD = <span class="number">1337</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">superPow</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span>[] b)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = b.length - <span class="number">1</span>; i &gt;= <span class="number">0</span>; --i) &#123;</span><br><span class="line">            ans = (<span class="keyword">int</span>) ((<span class="keyword">long</span>) ans * pow(a, b[i]) % MOD);</span><br><span class="line">            a = pow(a, <span class="number">10</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pow</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> res = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (n % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                res = (<span class="keyword">int</span>) ((<span class="keyword">long</span>) res * x % MOD);</span><br><span class="line">            &#125;</span><br><span class="line">            x = (<span class="keyword">int</span>) ((<span class="keyword">long</span>) x * x % MOD);</span><br><span class="line">            n /= <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>作者：LeetCode-Solution<br>链接：<a href="https://leetcode-cn.com/problems/super-pow/solution/chao-ji-ci-fang-by-leetcode-solution-ow8j/">https://leetcode-cn.com/problems/super-pow/solution/chao-ji-ci-fang-by-leetcode-solution-ow8j/</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;快速幂&lt;/p&gt;
&lt;h4 id=&quot;50-Pow-x-n&quot;&gt;&lt;a href=&quot;#50-Pow-x-n&quot; class=&quot;headerlink&quot; title=&quot;50. Pow(x, n)&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/</summary>
      
    
    
    
    
    <category term="算法" scheme="http://example.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>contains详解</title>
    <link href="http://example.com/2021/12/02/contains%E8%AF%A6%E8%A7%A3/"/>
    <id>http://example.com/2021/12/02/contains%E8%AF%A6%E8%A7%A3/</id>
    <published>2021-12-02T06:45:12.000Z</published>
    <updated>2021-12-02T07:04:53.334Z</updated>
    
    <content type="html"><![CDATA[<p>Contains方法</p><p>​    </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.HUToh;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.*  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        ArrayList arrayList = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    String s1 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        String s2 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    arrayList.add(s1);</span><br><span class="line">        arrayList.add(s2);</span><br><span class="line">        String s3 = <span class="keyword">new</span> String(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">        System.out.println(s1==s2);</span><br><span class="line">        System.out.println(s1.equals(s2));</span><br><span class="line">        System.out.println(arrayList.contains(s1));</span><br><span class="line">        System.out.println(arrayList.contains(s3));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码输出的是什么是</p><p>是false true true true</p><p>String的equals方法是重写了的 比较的是内容 并不是其他数据类型的equals比较的是内容</p><p>而Contains对象底层调用了equals方法，所以输出true；</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Contains方法&lt;/p&gt;
&lt;p&gt;​    &lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>集合</title>
    <link href="http://example.com/2021/12/01/%E9%9B%86%E5%90%88/"/>
    <id>http://example.com/2021/12/01/%E9%9B%86%E5%90%88/</id>
    <published>2021-12-01T10:44:04.000Z</published>
    <updated>2021-12-02T06:44:39.838Z</updated>
    
    <content type="html"><![CDATA[<p> 数组其实就是一个集合,集合实际上就是一个容器。</p><p>集合不能直接存储基本类型  存储的是Java对象的内存地址</p><p>list.add(100) 100会自动装箱成为Integer类型</p><p><img src="https://i.loli.net/2021/12/01/MFhqyvIxNbR4pOg.png"></p><p>ArraysList 底层为数组 非线程安全的</p><p>LinkedList     底层为双向链表</p><p>Vector采用了数组的这个结构 线程安全</p><p>HashMap 底层为哈希表</p><p>TreeMao 底层为二叉树</p><p>collection 继承于 Iterable(迭代器)</p><p>集合分为两大类  1.单个方式存储元素(ArrayList )  父接口为collection</p><p> 可以以键值对的方式(HashMap)&lt;K,V&gt;</p><p>foreach语句 又叫for循环增加语句</p><p>for(数据类型 变量:数组)</p><p>  ｛</p><p>​    ｝</p><p>例：</p><p>for（int i : arr）</p><p>{</p><p>sum = sum+i;</p><p>}</p><p>List存进去有序可重复(指的是存进去的顺序，下标以0 开始 以1递增)</p><p>数组的方法</p><p>数组排序 Arrays.sort(数组)</p><p>克隆一个数组   int[] clone = score.clone();</p><p>Map集合和collection没关系 </p><p>以key和value实现的键值对的方式存储元素</p><p>Map集合包括HashMap和Hashtable</p><p>HashMap底层的是哈希表，是非线程安全的</p><p>Hashtabl底层的是哈希表 ，是线程安全的</p><p>HashMap是无序的</p><p><img src="https://i.loli.net/2021/12/02/JsawZrOkED5BnAK.png"></p><p>#迭代器(Iterator)</p><p>Interator为对象  可以用hasNext和next</p><p>hasNext下一个是不是还有</p><p>next下一个</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     ArrayList  list = <span class="keyword">new</span> ArrayList();</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">5</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        Iterator iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>输出顺序也就是输入的顺序</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.HUToh;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.util.*  ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">     Set list = <span class="keyword">new</span> HashSet();</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">5</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">4</span>);</span><br><span class="line">        list.add(<span class="number">3</span>);</span><br><span class="line">        list.add(<span class="number">2</span>);</span><br><span class="line">        list.add(<span class="number">1</span>);</span><br><span class="line">        Iterator iterator = list.iterator();</span><br><span class="line">        <span class="keyword">while</span> (iterator.hasNext())</span><br><span class="line">        &#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出顺序和输入顺序并不一样</p><p>所以说Set是无序的  而且Set是不重复的</p><p>即Set具有自动去重功能</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt; 数组其实就是一个集合,集合实际上就是一个容器。&lt;/p&gt;
&lt;p&gt;集合不能直接存储基本类型  存储的是Java对象的内存地址&lt;/p&gt;
&lt;p&gt;list.add(100) 100会自动装箱成为Integer类型&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.ne</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>新生赛</title>
    <link href="http://example.com/2021/11/28/%E6%96%B0%E7%94%9F%E8%B5%9B/"/>
    <id>http://example.com/2021/11/28/%E6%96%B0%E7%94%9F%E8%B5%9B/</id>
    <published>2021-11-28T13:30:29.000Z</published>
    <updated>2021-11-28T13:42:31.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="L-恭喜edg夺得S11冠军"><a href="#L-恭喜edg夺得S11冠军" class="headerlink" title="L. 恭喜edg夺得S11冠军"></a>L. 恭喜edg夺得S11冠军</h1><p>纯属签到题 细致一点就好了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;EDGNBEDGNBEDGNBEDGNBEDGNBEDGNBEDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;EDGNBEDGNBEDGNBEDGNBEDGNBEDGNBEDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                             EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                            EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                           EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                          EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                         EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                        EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                       EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                      EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                     EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                    EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                   EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                  EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                 EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;                EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;               EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;              EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;             EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;            EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;           EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;          EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;         EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;        EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;       EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;      EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;     EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;    EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;   EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; EDGNB\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;EDGNB&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="A-阳阳姐的魔力数"><a href="#A-阳阳姐的魔力数" class="headerlink" title="A. 阳阳姐的魔力数"></a>A. 阳阳姐的魔力数</h1><h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>对于我们的出色的冒险者阳阳姐来说，魔力数对他有奇特的作用，能在战斗中助他一臂之力，所以他知道的魔力数越多越好，但是令他头疼的是，他不知道范围N<em>N</em>之内的自然数有多少个魔力数，于是他向你求助，你能帮帮他吗。 一个<strong>自然数</strong>有魔力，当且仅当这个自然数数可以由<strong>两个相同的自然数</strong>拼接起来，比如”2020”这个数字就是由两个”20”拼接而成，但是”2002”却不是魔力数，因为”20”和”02”是两个不同的数字。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">long</span> n = scan.nextLong();</span><br><span class="line">        <span class="keyword">long</span> sum =<span class="number">0</span>;</span><br><span class="line">        String s = n+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        String[]  str = &#123;<span class="string">&quot;9&quot;</span>,<span class="string">&quot;99&quot;</span>,<span class="string">&quot;999&quot;</span>,<span class="string">&quot;9999&quot;</span>,<span class="string">&quot;99999&quot;</span>,<span class="string">&quot;999999&quot;</span>,<span class="string">&quot;9999999&quot;</span>,<span class="string">&quot;99999999&quot;</span>,<span class="string">&quot;999999999&quot;</span>,<span class="string">&quot;9999999999&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> m = s.length();</span><br><span class="line">        <span class="keyword">int</span> k = m/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">100</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n&lt;<span class="number">11</span>) System.out.print(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">22</span>) System.out.print(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">33</span>) System.out.print(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">44</span>) System.out.print(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">55</span>) System.out.print(<span class="number">4</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">66</span>) System.out.print(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">77</span>) System.out.print(<span class="number">6</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">88</span>) System.out.print(<span class="number">7</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n&lt;<span class="number">99</span>) System.out.print(<span class="number">8</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">99</span>) System.out.print(<span class="number">9</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(m%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        System.out.print(str[k-<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        String string =<span class="string">&quot;&quot;</span>;</span><br><span class="line">        String string1 =<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>,j=k;i &lt; k;i++,j++)</span><br><span class="line">        &#123;</span><br><span class="line">        String t = s.charAt(i)+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        String t1 = s.charAt(j)+<span class="string">&quot;&quot;</span>;</span><br><span class="line">        string = string+t;</span><br><span class="line">        string1 = string1+t1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> a = Integer.parseInt(string);</span><br><span class="line">        <span class="keyword">int</span> b = Integer.parseInt(string1);</span><br><span class="line">        <span class="keyword">if</span>(a&lt;=b)</span><br><span class="line">        &#123;<span class="keyword">int</span> q = (<span class="keyword">int</span>) (Integer.parseInt(string)-Math.pow(<span class="number">10</span>,(m/<span class="number">2</span>)-<span class="number">1</span>)+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">int</span> p = Integer.parseInt(str[(m/<span class="number">2</span>)-<span class="number">2</span>]);</span><br><span class="line">        System.out.print(q+p);&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> q = (<span class="keyword">int</span>) (Integer.parseInt(string)-Math.pow(<span class="number">10</span>, (m/<span class="number">2</span>)-<span class="number">1</span>));</span><br><span class="line">            <span class="keyword">int</span> p = Integer.parseInt(str[(m/<span class="number">2</span>)-<span class="number">2</span>]);</span><br><span class="line">            System.out.print(q+p);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题有着更好的方法  纯数学题 我直接吧所有情况考虑上了</p><p>奇数位的时候为固定数 不满足魔力数</p><p>偶数为为前一半的值本身或者减一 看前面一半和后面一半谁大</p><p>Yuuki非常喜欢玩APEX，一天不玩就浑身难受，可是为了通过考试，他不得不将部分时间花在学习上来维持段位和分数的平衡</p><p>给定一个字符串s,字符串s只由字符a和字符b组成，其中a代表Yuuki那天玩APEX，b代表学习</p><p>因为Yuuki非常喜欢1010这个数字，所以他规定：在连续的十天之内,玩游戏和学习的天数必须一致</p><p>是否存在连续1010天的区间[l,r][<em>l</em>,<em>r</em>],即r-l+1=10<em>r</em>−<em>l</em>+1=10。 使得Yuuki游戏和学习的天数一样多。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scan.nextInt(); </span><br><span class="line">       String s = scan.next(); </span><br><span class="line">        <span class="keyword">if</span>(n &lt; <span class="number">10</span>)&#123; System.out.print(<span class="string">&quot;Yuuki is unhappy&quot;</span>);&#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">int</span> l = <span class="number">0</span>,r=<span class="number">10</span>;</span><br><span class="line">            <span class="keyword">while</span>(r &lt;=n)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> p=<span class="number">0</span>,q=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(;l&lt;r;l++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(s.charAt(l)==<span class="string">&#x27;a&#x27;</span>) p++;</span><br><span class="line">                <span class="keyword">else</span> q++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(p==<span class="number">5</span>&amp;&amp;q==<span class="number">5</span>) &#123;System.out.println(r-<span class="number">9</span>+<span class="string">&quot; &quot;</span>+r);</span><br><span class="line">            <span class="keyword">break</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">                r++;</span><br><span class="line">                l = r-<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(r &gt; n) System.out.print(<span class="string">&quot;Yuuki is unhappy&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题卡回车</p><p>卡了半个小时 挺恶心的 。。。。</p><h1 id="G-nero想出勤"><a href="#G-nero想出勤" class="headerlink" title="G. nero想出勤"></a>G. nero想出勤</h1><h3 id="描述-1"><a href="#描述-1" class="headerlink" title="描述"></a>描述</h3><p>又是阳光明媚的一天，看着这么好的天气，nero想要出勤。</p><p>但是nero一个人出勤很无聊，于是拉着lock一起出勤。</p><p>他们俩一起走到了出发的起点，由于nero觉得慢慢走路很无聊，所以nero想到了一个主意，就是两个人轮流决定前进的方向，nero希望能够上下走，而lock希望能够左右走。</p><p>每一回合他们会根据上述的规则决定前进的方向，然后朝着决定的方向前进一步。</p><p>由于他们俩都有选择困难症，不知道谁优先决定前进的方向，于是他们把这个困难的任务交给了你，<strong>你可以任意选择谁优先</strong>，希望你能够告诉他们能否从起点到达出勤的目的地，如果能，请求出所需要的最小步数。</p><h3 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h3><p>第一行输入一个整数 t(1\leq t \leq 10^5)<em>t</em>(1≤<em>t</em>≤105)，代表t<em>t</em>组样例，每组样例有两行输入。</p><p>对于每一组样例:</p><p>第一行输入两个整数sy<em>s**y</em>和sx(-10^9\leq sx,sy\leq 10^9)<em>s**x</em>(−109≤<em>s**x</em>,<em>s**y</em>≤109)，分别代表起点的纵坐标sy<em>s**y</em>和起点的横坐标sx<em>s**x</em>。</p><p>第二行输入两个整数ey<em>e**y</em>和ex(-10^9\leq ex,ey\leq 10^9)<em>e**x</em>(−109≤<em>e**x</em>,<em>e**y</em>≤109)，分别代表终点的纵坐标ey<em>e**y</em>和起点的横坐标ex<em>e**x</em>。</p><h3 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h3><p>对于每一组样例：</p><p>第一行输出能否到达目的地。</p><p>如果能，输出”YES”(不包含引号)，否则输出”NO“(不包含引号)。</p><p>如果能够到达目的地，在第二行输出所需的最小步数，定义每一步为坐标加一或者减一。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Main</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scan.nextInt();</span><br><span class="line">        <span class="keyword">long</span> []arr = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">long</span> []arr2 = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">2</span>]; </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; n;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        arr[<span class="number">0</span>] = scan.nextLong();</span><br><span class="line">        arr[<span class="number">1</span>] = scan.nextLong();</span><br><span class="line">        arr2[<span class="number">0</span>] = scan.nextLong();</span><br><span class="line">        arr2[<span class="number">1</span>] = scan.nextLong();</span><br><span class="line">        <span class="keyword">long</span> x = Math.abs(arr[<span class="number">0</span>]-arr2[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">long</span> y = Math.abs(arr[<span class="number">1</span>]-arr2[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">long</span> z = Math.min(x, y);</span><br><span class="line">           <span class="keyword">long</span> sum = z*<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">long</span> p = Math.max(x,y);</span><br><span class="line">        p = p-z;</span><br><span class="line">        <span class="keyword">if</span>(p%<span class="number">2</span>==<span class="number">0</span>) sum = sum + p*<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> sum = sum +(p*<span class="number">2</span>)-<span class="number">1</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">        System.out.println(sum);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单纯的模拟题 只是这里就需要回车了 卡的我头大了</p><h1 id="K-樊学长的馈赠"><a href="#K-樊学长的馈赠" class="headerlink" title="K. 樊学长的馈赠"></a>K. 樊学长的馈赠</h1><h3 id="描述-2"><a href="#描述-2" class="headerlink" title="描述"></a>描述</h3><p>fzx学长是一位非常厉害的老学长，他在备战考研时依旧挂念着我们的小萌新们，于是他特意给大家出了一道有意思的题目：<br>在茫茫大海中有<strong>n</strong>座独立的岛屿，岛上生活着一些淳朴善良的村民。<br>但是有一天，大海上出现了一群可怕的海盗，海盗们虽然不敢直接攻击岛屿，但是会在海上等待他们出来捕鱼，然后趁机袭击他们。<br>村民们为了抵御海盗，决定与其他岛屿结成攻守同盟，现在你需要为他们规划航线，使得<strong>n</strong>个岛屿形成一个整体(从任意一个岛屿出发，都能到达其他的n-1个岛屿)。<br>但是由于村民们没有接受过现代化的教育，所以他们看不懂你画的航线图，所以你只能告诉他们要设立一些航线，村民们会<strong>随机选择两个之前没有建立过航线的岛屿</strong>，在两个岛屿之间建立一条航线。<br>但是设立航线也是很麻烦的事情，为了尽快组成同盟抵御海盗，你需要找到一个最小的航线数量<strong>m</strong>，确保<strong>n</strong>个岛屿<strong>一定能</strong>形成一个整体。<br>***注意：一条航线可以看作连接两个岛屿**u**和*<em>v*<em>的一条边，相同的两个岛屿之间不会有重复的航线,同时也不会有岛屿规划到自己本身的航线*</em></em></p><h3 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h3><p>第一行输入一个整数t(t\leq 5 \times 10^5)<em>t</em>(<em>t</em>≤5×105)，代表有t<em>t</em>个样例。<br>每组样例有一行，输入一个整数n(1 &lt; n \leq 10^9)<em>n</em>(1&lt;<em>n</em>≤109)，代表有n<em>n</em>个独立的岛屿。</p><h3 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h3><p>每个样例输出一行，一行包含一个正整数m<em>m</em>代表生成的航线数量。</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h4 id="输入复制"><a href="#输入复制" class="headerlink" title="输入复制"></a>输入复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输出复制"><a href="#输出复制" class="headerlink" title="输出复制"></a>输出复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h4 id="输入复制-1"><a href="#输入复制-1" class="headerlink" title="输入复制"></a>输入复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td></tr></table></figure><h4 id="输出复制-1"><a href="#输出复制-1" class="headerlink" title="输出复制"></a>输出复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">7</span><br></pre></td></tr></table></figure><h4 id="输入复制-2"><a href="#输入复制-2" class="headerlink" title="输入复制"></a>输入复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">65536</span><br></pre></td></tr></table></figure><h4 id="输出复制-2"><a href="#输出复制-2" class="headerlink" title="输出复制"></a>输出复制</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2147385346</span><br></pre></td></tr></table></figure><p>这题看题目根本没用 直接撸样例 还是能够通过65536和2147385346</p><p>后者的位数是前者的两倍</p><p><img src="https://i.loli.net/2021/11/28/rCe3xN6yazldXiU.png"></p><p>32751是65536差不多1/2</p><p>经过观察 是（n-1）*(n-2)/2+1;</p><p>不过可惜的是赛后几分钟想出来了 </p><p>不过结果还行 二等奖 不过A了这题的话就是第一名了</p><p>不过刷了二个月力扣还算不错的回馈</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;L-恭喜edg夺得S11冠军&quot;&gt;&lt;a href=&quot;#L-恭喜edg夺得S11冠军&quot; class=&quot;headerlink&quot; title=&quot;L. 恭喜edg夺得S11冠军&quot;&gt;&lt;/a&gt;L. 恭喜edg夺得S11冠军&lt;/h1&gt;&lt;p&gt;纯属签到题 细致一点就好了&lt;/p&gt;
&lt;f</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>PDF水印demo</title>
    <link href="http://example.com/2021/11/25/PDF%E6%B0%B4%E5%8D%B0demo/"/>
    <id>http://example.com/2021/11/25/PDF%E6%B0%B4%E5%8D%B0demo/</id>
    <published>2021-11-25T07:36:18.000Z</published>
    <updated>2021-11-25T07:44:12.980Z</updated>
    
    <content type="html"><![CDATA[<p>PDF水印demo学习</p><p>第一步创建一个Application类 加上@SpringBootApplication的注解</p><p>打印控制台消息</p><p><code>System.out.println(&quot;SpringBoot启动成功&quot;);</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Application.class, args);</span><br><span class="line">        System.out.println(<span class="string">&quot;SpringBoot启动成功&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/25/QAhnxXS98FM6jws.png"></p><p>水印程序</p><p><img src="https://i.loli.net/2021/11/25/KcTm97dtOSshLg4.png"></p><p>FileDTO文件的属性</p><p>文件序号 index</p><p>文件路径 path</p><p>构造有参无参</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件序号</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer index;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 文件路径</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String path;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIndex</span><span class="params">(Integer index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.index = index;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> path;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPath</span><span class="params">(String path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.path = path;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PDF拆分为image</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.pdfwatermark;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.pdmodel.PDDocument;</span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.rendering.ImageType;</span><br><span class="line"><span class="keyword">import</span> org.apache.pdfbox.rendering.PDFRenderer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Pdf2Image</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将File PDF文件转化为每一张图片</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file PDF文件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回每一张图片的实体对象集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;FileDTO&gt; <span class="title">generate</span><span class="params">(File file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Long now = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//读取PDF</span></span><br><span class="line">            PDDocument document = PDDocument.load(file);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//加载PDF对象</span></span><br><span class="line">            PDFRenderer pdfRenderer = <span class="keyword">new</span> PDFRenderer(document);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//存储的PDF每一张图片的路径以及索引</span></span><br><span class="line">            List&lt;FileDTO&gt; dataList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> page = <span class="number">0</span>;page&lt;document.getNumberOfPages();page++)&#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//读取PDF每一页的图片</span></span><br><span class="line">                BufferedImage img = pdfRenderer.renderImageWithDPI(page, <span class="number">300</span>, ImageType.RGB);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//生成图片的本地路径</span></span><br><span class="line">                String pathname = PdfWatermarkConstants.PDF_2_IMAGE + now + <span class="string">&quot;/&quot;</span> + file.getName() + page + <span class="string">&quot;.png&quot;</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">//创建本地文件</span></span><br><span class="line">                File imageFile = <span class="keyword">new</span> File(pathname);</span><br><span class="line">                <span class="comment">//创建文件夹</span></span><br><span class="line">                imageFile.mkdirs();</span><br><span class="line">                <span class="comment">//创建文件</span></span><br><span class="line">                imageFile.createNewFile();</span><br><span class="line"></span><br><span class="line">                FileDTO dto = <span class="keyword">new</span> FileDTO();</span><br><span class="line">                dataList.add(dto);</span><br><span class="line"></span><br><span class="line">                dto.setIndex(page);</span><br><span class="line">                dto.setPath(pathname);</span><br><span class="line"></span><br><span class="line">                <span class="comment">//生成PNG格式的图片</span></span><br><span class="line">                ImageIO.write(img, <span class="string">&quot;png&quot;</span>, imageFile);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//关闭Doc流</span></span><br><span class="line">            document.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> dataList;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PDF水印demo学习&lt;/p&gt;
&lt;p&gt;第一步创建一个Application类 加上@SpringBootApplication的注解&lt;/p&gt;
&lt;p&gt;打印控制台消息&lt;/p&gt;
&lt;p&gt;&lt;code&gt;System.out.println(&amp;quot;SpringBoot启动成功&amp;qu</summary>
      
    
    
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="springboot" scheme="http://example.com/tags/springboot/"/>
    
  </entry>
  
</feed>
